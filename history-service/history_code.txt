-e 
=== ./target/classes/bootstrap.yml ===

# The bootstrap.yml (or bootstrap.properties) file in a Spring Boot application
# is used for early initialization during the application startup process.
# It is loaded before the main application.yml or application.properties.
spring:
  application:
    name: history-service
  profiles:
    active: production # config-client-production.property(or yml)
# This profile needs to match the server's profile
  cloud:
    config:
      name: history-service # need to match the first config file in GitHub, By default use the application name
      uri: https://cloudconfig.nico-nico-nii.com/ # point to config server location
      label: main # branch
# Getting cloud config from the server on port 8888

management:
  endpoints:
    web:
      exposure:
        include: "*" # Exposes all actuator's endpoints, includes /refresh

-e 
=== ./target/classes/application.properties ===

# Application Configuration
spring.application.name=history-service
server.port=8083

# Database Configuration
#spring.datasource.url=jdbc:mysql://database-1.cjwa24k2srfd.us-east-2.rds.amazonaws.com:3306/history_db?useSSL=true&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=groupproject
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Database Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1

# JPA/Hibernate Configuration
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.properties.hibernate.format_sql=true

# Cache Configuration
spring.cache.type=simple

# Eureka Configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.client.enabled=true

# Logging Configuration
logging.level.com.beaconfire=DEBUG
logging.level.org.springframework=INFO
logging.level.org.hibernate=INFO

# RabbitMQ Connection Settings
spring.rabbitmq.host=b-420b96b0-7ce2-4393-9684-0ede382d6959.mq.us-east-2.amazonaws.com
spring.rabbitmq.port=5671
spring.rabbitmq.username=groupproject
spring.rabbitmq.password=groupproject

# RabbitMQ SSL Configuration
spring.rabbitmq.ssl.enabled=true
spring.rabbitmq.ssl.algorithm=TLSv1.2
spring.rabbitmq.ssl.verify-hostname=true

management.endpoints.web.exposure.include=*
management.endpoint.refresh.enabled=true


-e 
=== ./target/maven-archiver/pom.properties ===

artifactId=history-service
groupId=com.beaconfire
version=0.0.1-SNAPSHOT
-e 
=== ./target/surefire-reports/TEST-com.beaconfire.history_service.HistoryServiceApplicationTests.xml ===

<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.beaconfire.history_service.HistoryServiceApplicationTests" time="14.442" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/test-classes:/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/classes:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.0/spring-boot-starter-web-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.0/spring-boot-starter-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.0/spring-boot-starter-logging-3.4.0.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.1/log4j-to-slf4j-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.1/log4j-api-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.0/spring-boot-starter-json-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.1/jackson-datatype-jdk8-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.1/jackson-module-parameter-names-2.18.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-web/6.2.0/spring-web-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-beans/6.2.0/spring-beans-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-webmvc/6.2.0/spring-webmvc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aop/6.2.0/spring-aop-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context/6.2.0/spring-context-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-expression/6.2.0/spring-expression-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.0/spring-boot-starter-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.0/spring-boot-starter-jdbc-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jdbc/6.2.0/spring-jdbc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/orm/hibernate-core/6.6.2.Final/hibernate-core-6.6.2.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/zhangruiqi/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy/1.15.10/byte-buddy-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/zhangruiqi/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-jpa/3.4.0/spring-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-commons/3.4.0/spring-data-commons-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-orm/6.2.0/spring-orm-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-tx/6.2.0/spring-tx-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aspects/6.2.0/spring-aspects-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.0/spring-boot-starter-validation-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.33/tomcat-embed-el-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-client/4.2.0/spring-cloud-starter-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter/4.2.0/spring-cloud-starter-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-context/4.2.0/spring-cloud-context-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/bouncycastle/bcprov-jdk18on/1.78.1/bcprov-jdk18on-1.78.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/4.2.0/spring-cloud-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.4.1/httpclient5-5.4.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.3.1/httpcore5-5.3.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5-h2/5.3.1/httpcore5-h2-5.3.1.jar:/Users/zhangruiqi/.m2/repository/com/netflix/eureka/eureka-client/2.0.4/eureka-client-2.0.4.jar:/Users/zhangruiqi/.m2/repository/com/thoughtworks/xstream/xstream/1.4.20/xstream-1.4.20.jar:/Users/zhangruiqi/.m2/repository/io/github/x-stream/mxparser/1.2.2/mxparser-1.2.2.jar:/Users/zhangruiqi/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/Users/zhangruiqi/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/spectator/spectator-api/1.7.3/spectator-api-1.7.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/zhangruiqi/.m2/repository/commons-codec/commons-codec/1.17.1/commons-codec-1.17.1.jar:/Users/zhangruiqi/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/zhangruiqi/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar:/Users/zhangruiqi/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar:/Users/zhangruiqi/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/zhangruiqi/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/zhangruiqi/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/guava/33.3.1-jre/guava-33.3.1-jre.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/failureaccess/1.0.2/failureaccess-1.0.2.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/zhangruiqi/.m2/repository/org/checkerframework/checker-qual/3.43.0/checker-qual-3.43.0.jar:/Users/zhangruiqi/.m2/repository/com/google/errorprone/error_prone_annotations/2.28.0/error_prone_annotations-2.28.0.jar:/Users/zhangruiqi/.m2/repository/com/google/j2objc/j2objc-annotations/3.0.0/j2objc-annotations-3.0.0.jar:/Users/zhangruiqi/.m2/repository/com/google/code/gson/gson/2.11.0/gson-2.11.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/servo/servo-core/0.5.3/servo-core-0.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/zhangruiqi/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/Users/zhangruiqi/.m2/repository/org/codehaus/jettison/jettison/1.5.4/jettison-1.5.4.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-devtools/3.4.0/spring-boot-devtools-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot/3.4.0/spring-boot-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.0/spring-boot-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-openfeign/4.2.0/spring-cloud-starter-openfeign-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-openfeign-core/4.2.0/spring-cloud-openfeign-core-4.2.0.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-form-spring/13.5/feign-form-spring-13.5.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-form/13.5/feign-form-13.5.jar:/Users/zhangruiqi/.m2/repository/commons-fileupload/commons-fileupload/1.5/commons-fileupload-1.5.jar:/Users/zhangruiqi/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-commons/4.2.0/spring-cloud-commons-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/security/spring-security-crypto/6.4.1/spring-security-crypto-6.4.1.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-core/13.5/feign-core-13.5.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-slf4j/13.5/feign-slf4j-13.5.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.1/jackson-datatype-jsr310-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.1/jackson-annotations-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.1/jackson-core-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.1/jackson-databind-2.18.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-loadbalancer/4.2.0/spring-cloud-starter-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-loadbalancer/4.2.0/spring-cloud-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/reactor-core/3.7.0/reactor-core-3.7.0.jar:/Users/zhangruiqi/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/addons/reactor-extra/3.5.2/reactor-extra-3.5.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.4.0/spring-boot-starter-cache-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context-support/6.2.0/spring-context-support-6.2.0.jar:/Users/zhangruiqi/.m2/repository/com/stoyanr/evictor/1.0.0/evictor-1.0.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.0/spring-boot-starter-tomcat-3.4.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.33/tomcat-embed-core-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.33/tomcat-embed-websocket-10.1.33.jar:/Users/zhangruiqi/.m2/repository/com/mysql/mysql-connector-j/9.1.0/mysql-connector-j-9.1.0.jar:/Users/zhangruiqi/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.0/spring-boot-starter-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test/3.4.0/spring-boot-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.0/spring-boot-test-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/zhangruiqi/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/zhangruiqi/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/zhangruiqi/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/zhangruiqi/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.3/junit-jupiter-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.3/junit-jupiter-api-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-commons/1.11.3/junit-platform-commons-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.3/junit-jupiter-params-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.3/junit-jupiter-engine-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-engine/1.11.3/junit-platform-engine-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.10/byte-buddy-agent-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/zhangruiqi/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/zhangruiqi/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-core/6.2.0/spring-core-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jcl/6.2.0/spring-jcl-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-test/6.2.0/spring-test-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-amqp/3.4.0/spring-boot-starter-amqp-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-messaging/6.2.0/spring-messaging-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-rabbit/3.2.0/spring-rabbit-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-amqp/3.2.0/spring-amqp-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/retry/spring-retry/2.0.10/spring-retry-2.0.10.jar:/Users/zhangruiqi/.m2/repository/com/rabbitmq/amqp-client/5.22.0/amqp-client-5.22.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.4.0/spring-boot-starter-actuator-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.4.0/spring-boot-actuator-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-actuator/3.4.0/spring-boot-actuator-3.4.0.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-observation/1.14.1/micrometer-observation-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-commons/1.14.1/micrometer-commons-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-jakarta9/1.14.1/micrometer-jakarta9-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-core/1.14.1/micrometer-core-1.14.1.jar:/Users/zhangruiqi/.m2/repository/org/hdrhistogram/HdrHistogram/2.2.2/HdrHistogram-2.2.2.jar:/Users/zhangruiqi/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-config/4.2.0/spring-cloud-starter-config-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-config-client/4.2.0/spring-cloud-config-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-bootstrap/4.2.0/spring-cloud-starter-bootstrap-4.2.0.jar:"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="user.timezone" value="America/Los_Angeles"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="APPLICATION_NAME" value="history-service"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/Users/zhangruiqi/Library/Java/JavaVirtualMachines/corretto-17.0.13/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/surefire/surefirebooter-20241218154531799_28.jar /Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/surefire 2024-12-18T15-45-29_335-jvmRun8 surefire-20241218154531799_26tmp surefire_7-20241218154531799_27tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/test-classes:/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/classes:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.0/spring-boot-starter-web-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.0/spring-boot-starter-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.0/spring-boot-starter-logging-3.4.0.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.1/log4j-to-slf4j-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.1/log4j-api-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.0/spring-boot-starter-json-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.1/jackson-datatype-jdk8-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.1/jackson-module-parameter-names-2.18.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-web/6.2.0/spring-web-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-beans/6.2.0/spring-beans-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-webmvc/6.2.0/spring-webmvc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aop/6.2.0/spring-aop-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context/6.2.0/spring-context-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-expression/6.2.0/spring-expression-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.0/spring-boot-starter-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.0/spring-boot-starter-jdbc-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jdbc/6.2.0/spring-jdbc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/orm/hibernate-core/6.6.2.Final/hibernate-core-6.6.2.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/zhangruiqi/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy/1.15.10/byte-buddy-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/zhangruiqi/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-jpa/3.4.0/spring-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-commons/3.4.0/spring-data-commons-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-orm/6.2.0/spring-orm-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-tx/6.2.0/spring-tx-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aspects/6.2.0/spring-aspects-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.0/spring-boot-starter-validation-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.33/tomcat-embed-el-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-client/4.2.0/spring-cloud-starter-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter/4.2.0/spring-cloud-starter-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-context/4.2.0/spring-cloud-context-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/bouncycastle/bcprov-jdk18on/1.78.1/bcprov-jdk18on-1.78.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/4.2.0/spring-cloud-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.4.1/httpclient5-5.4.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.3.1/httpcore5-5.3.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5-h2/5.3.1/httpcore5-h2-5.3.1.jar:/Users/zhangruiqi/.m2/repository/com/netflix/eureka/eureka-client/2.0.4/eureka-client-2.0.4.jar:/Users/zhangruiqi/.m2/repository/com/thoughtworks/xstream/xstream/1.4.20/xstream-1.4.20.jar:/Users/zhangruiqi/.m2/repository/io/github/x-stream/mxparser/1.2.2/mxparser-1.2.2.jar:/Users/zhangruiqi/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/Users/zhangruiqi/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/spectator/spectator-api/1.7.3/spectator-api-1.7.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/zhangruiqi/.m2/repository/commons-codec/commons-codec/1.17.1/commons-codec-1.17.1.jar:/Users/zhangruiqi/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/zhangruiqi/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar:/Users/zhangruiqi/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar:/Users/zhangruiqi/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/zhangruiqi/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/zhangruiqi/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/guava/33.3.1-jre/guava-33.3.1-jre.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/failureaccess/1.0.2/failureaccess-1.0.2.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/zhangruiqi/.m2/repository/org/checkerframework/checker-qual/3.43.0/checker-qual-3.43.0.jar:/Users/zhangruiqi/.m2/repository/com/google/errorprone/error_prone_annotations/2.28.0/error_prone_annotations-2.28.0.jar:/Users/zhangruiqi/.m2/repository/com/google/j2objc/j2objc-annotations/3.0.0/j2objc-annotations-3.0.0.jar:/Users/zhangruiqi/.m2/repository/com/google/code/gson/gson/2.11.0/gson-2.11.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/servo/servo-core/0.5.3/servo-core-0.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/zhangruiqi/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/Users/zhangruiqi/.m2/repository/org/codehaus/jettison/jettison/1.5.4/jettison-1.5.4.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-devtools/3.4.0/spring-boot-devtools-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot/3.4.0/spring-boot-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.0/spring-boot-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-openfeign/4.2.0/spring-cloud-starter-openfeign-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-openfeign-core/4.2.0/spring-cloud-openfeign-core-4.2.0.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-form-spring/13.5/feign-form-spring-13.5.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-form/13.5/feign-form-13.5.jar:/Users/zhangruiqi/.m2/repository/commons-fileupload/commons-fileupload/1.5/commons-fileupload-1.5.jar:/Users/zhangruiqi/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-commons/4.2.0/spring-cloud-commons-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/security/spring-security-crypto/6.4.1/spring-security-crypto-6.4.1.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-core/13.5/feign-core-13.5.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-slf4j/13.5/feign-slf4j-13.5.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.1/jackson-datatype-jsr310-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.1/jackson-annotations-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.1/jackson-core-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.1/jackson-databind-2.18.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-loadbalancer/4.2.0/spring-cloud-starter-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-loadbalancer/4.2.0/spring-cloud-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/reactor-core/3.7.0/reactor-core-3.7.0.jar:/Users/zhangruiqi/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/addons/reactor-extra/3.5.2/reactor-extra-3.5.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.4.0/spring-boot-starter-cache-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context-support/6.2.0/spring-context-support-6.2.0.jar:/Users/zhangruiqi/.m2/repository/com/stoyanr/evictor/1.0.0/evictor-1.0.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.0/spring-boot-starter-tomcat-3.4.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.33/tomcat-embed-core-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.33/tomcat-embed-websocket-10.1.33.jar:/Users/zhangruiqi/.m2/repository/com/mysql/mysql-connector-j/9.1.0/mysql-connector-j-9.1.0.jar:/Users/zhangruiqi/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.0/spring-boot-starter-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test/3.4.0/spring-boot-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.0/spring-boot-test-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/zhangruiqi/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/zhangruiqi/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/zhangruiqi/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/zhangruiqi/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.3/junit-jupiter-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.3/junit-jupiter-api-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-commons/1.11.3/junit-platform-commons-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.3/junit-jupiter-params-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.3/junit-jupiter-engine-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-engine/1.11.3/junit-platform-engine-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.10/byte-buddy-agent-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/zhangruiqi/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/zhangruiqi/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-core/6.2.0/spring-core-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jcl/6.2.0/spring-jcl-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-test/6.2.0/spring-test-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-amqp/3.4.0/spring-boot-starter-amqp-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-messaging/6.2.0/spring-messaging-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-rabbit/3.2.0/spring-rabbit-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-amqp/3.2.0/spring-amqp-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/retry/spring-retry/2.0.10/spring-retry-2.0.10.jar:/Users/zhangruiqi/.m2/repository/com/rabbitmq/amqp-client/5.22.0/amqp-client-5.22.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.4.0/spring-boot-starter-actuator-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.4.0/spring-boot-actuator-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-actuator/3.4.0/spring-boot-actuator-3.4.0.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-observation/1.14.1/micrometer-observation-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-commons/1.14.1/micrometer-commons-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-jakarta9/1.14.1/micrometer-jakarta9-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-core/1.14.1/micrometer-core-1.14.1.jar:/Users/zhangruiqi/.m2/repository/org/hdrhistogram/HdrHistogram/2.2.2/HdrHistogram-2.2.2.jar:/Users/zhangruiqi/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-config/4.2.0/spring-cloud-starter-config-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-config-client/4.2.0/spring-cloud-config-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-bootstrap/4.2.0/spring-cloud-starter-bootstrap-4.2.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/zhangruiqi"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-10-15"/>
    <property name="java.home" value="/Users/zhangruiqi/Library/Java/JavaVirtualMachines/corretto-17.0.13/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/surefire/surefirebooter-20241218154531799_28.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="17.0.13+11-LTS"/>
    <property name="user.name" value="zhangruiqi"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="14.5"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-17.0.13.11.1"/>
    <property name="localRepository" value="/Users/zhangruiqi/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-17/issues/"/>
    <property name="java.io.tmpdir" value="/var/folders/21/8jwtn5ps4wb5rvh_md4yqk_80000gn/T/"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.13"/>
    <property name="user.dir" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="74105"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/zhangruiqi/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="17.0.13+11-LTS"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="61.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[history-service] "/>
  </properties>
  <testcase name="contextLoads" classname="com.beaconfire.history_service.HistoryServiceApplicationTests" time="0.407">
    <system-out><![CDATA[15:45:33.616 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.beaconfire.history_service.HistoryServiceApplicationTests]: HistoryServiceApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:45:33.874 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.beaconfire.history_service.HistoryServiceApplication for test class com.beaconfire.history_service.HistoryServiceApplicationTests
15:45:34.830 [main] INFO org.springframework.boot.devtools.restart.RestartApplicationListener -- Restart disabled due to context in which it is running

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.0)

2024-12-18T15:45:37.345-08:00  INFO 74105 --- [history-service] [           main] c.c.c.ConfigServicePropertySourceLocator : Fetching config from server at : http://localhost:8888
2024-12-18T15:45:38.227-08:00  INFO 74105 --- [history-service] [           main] c.c.c.ConfigServicePropertySourceLocator : Located environment: name=history-service, profiles=[production], label=main, version=1289e418404ee4438a7081e1f62f1e2db95a7d15, state=null
2024-12-18T15:45:38.229-08:00  INFO 74105 --- [history-service] [           main] b.c.PropertySourceBootstrapConfiguration : Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Oct-Java-Group-Project/forum-app-config.git/history-service-production.yml'}]
2024-12-18T15:45:38.266-08:00  INFO 74105 --- [history-service] [           main] c.b.h.HistoryServiceApplicationTests     : The following 1 profile is active: "production"
2024-12-18T15:45:39.610-08:00  INFO 74105 --- [history-service] [           main] .i.s.PathMatchingResourcePatternResolver : Skipping search for files matching pattern [**/*.class]: directory [/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/test-classes/com/beaconfire/history_service/feign] does not exist
2024-12-18T15:45:40.738-08:00  INFO 74105 --- [history-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-18T15:45:40.969-08:00  INFO 74105 --- [history-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 212 ms. Found 1 JPA repository interface.
2024-12-18T15:45:41.687-08:00  INFO 74105 --- [history-service] [           main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=e990403e-2e7c-3a5d-bb62-ddbce340e15e
2024-12-18T15:45:42.543-08:00  INFO 74105 --- [history-service] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-18T15:45:42.579-08:00  INFO 74105 --- [history-service] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.2.Final
2024-12-18T15:45:42.603-08:00  INFO 74105 --- [history-service] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-12-18T15:45:42.886-08:00  INFO 74105 --- [history-service] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-12-18T15:45:42.934-08:00  INFO 74105 --- [history-service] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-12-18T15:45:44.101-08:00  INFO 74105 --- [history-service] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41f61188
2024-12-18T15:45:44.104-08:00  INFO 74105 --- [history-service] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-12-18T15:45:44.344-08:00  WARN 74105 --- [history-service] [           main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-12-18T15:45:44.366-08:00  INFO 74105 --- [history-service] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.39
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2024-12-18T15:45:45.082-08:00  INFO 74105 --- [history-service] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-12-18T15:45:45.354-08:00  INFO 74105 --- [history-service] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-18T15:45:45.624-08:00  INFO 74105 --- [history-service] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-12-18T15:45:45.940-08:00  WARN 74105 --- [history-service] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-18T15:45:46.064-08:00  INFO 74105 --- [history-service] [           main] o.s.c.openfeign.FeignClientFactoryBean   : For 'users-service' URL not provided. Will try picking an instance via load-balancing.
2024-12-18T15:45:46.134-08:00  INFO 74105 --- [history-service] [           main] o.s.c.openfeign.FeignClientFactoryBean   : For 'posts-service' URL not provided. Will try picking an instance via load-balancing.
2024-12-18T15:45:46.897-08:00  INFO 74105 --- [history-service] [           main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-12-18T15:45:46.917-08:00  WARN 74105 --- [history-service] [           main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-12-18T15:45:46.927-08:00  INFO 74105 --- [history-service] [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 17 endpoints beneath base path '/actuator'
2024-12-18T15:45:46.971-08:00  INFO 74105 --- [history-service] [           main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-12-18T15:45:46.982-08:00  INFO 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-12-18T15:45:46.983-08:00  INFO 74105 --- [history-service] [           main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-12-18T15:45:46.986-08:00  INFO 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-12-18T15:45:46.987-08:00  INFO 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-12-18T15:45:46.987-08:00  INFO 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-12-18T15:45:46.987-08:00  INFO 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-12-18T15:45:46.987-08:00  INFO 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-12-18T15:45:46.987-08:00  INFO 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-12-18T15:45:46.987-08:00  INFO 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-12-18T15:45:47.064-08:00  INFO 74105 --- [history-service] [           main] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:174)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:162)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1046)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:410)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:245)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:240)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1351)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:375)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:372)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:510)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:295)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:240)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:630)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:554)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:141)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 148 more

2024-12-18T15:45:47.066-08:00  WARN 74105 --- [history-service] [           main] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
2024-12-18T15:45:47.066-08:00  INFO 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_HISTORY-SERVICE/10.0.0.83:history-service:8083 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1046)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:410)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:245)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:240)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1351)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:375)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:372)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:510)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:295)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:240)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:630)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)

2024-12-18T15:45:47.068-08:00  INFO 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : Initial registry fetch from primary servers failed
2024-12-18T15:45:47.068-08:00  WARN 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : Using default backup registry implementation which does not do anything.
2024-12-18T15:45:47.069-08:00  INFO 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : Initial registry fetch from backup servers failed
2024-12-18T15:45:47.069-08:00  INFO 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-12-18T15:45:47.070-08:00  INFO 74105 --- [history-service] [           main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-12-18T15:45:47.071-08:00  INFO 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1734565547070 with initial instances count: 0
2024-12-18T15:45:47.075-08:00  INFO 74105 --- [history-service] [           main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application HISTORY-SERVICE with eureka with status UP
2024-12-18T15:45:47.076-08:00  INFO 74105 --- [history-service] [           main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1734565547075, current=UP, previous=STARTING]
2024-12-18T15:45:47.076-08:00  INFO 74105 --- [history-service] [foReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_HISTORY-SERVICE/10.0.0.83:history-service:8083: registering service...
2024-12-18T15:45:47.090-08:00  INFO 74105 --- [history-service] [           main] c.b.h.HistoryServiceApplicationTests     : Started HistoryServiceApplicationTests in 12.274 seconds (process running for 15.24)
2024-12-18T15:45:47.093-08:00  INFO 74105 --- [history-service] [foReplicator-%d] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for "http://localhost:8761/eureka/apps/HISTORY-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8761/eureka/apps/HISTORY-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:554)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:141)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)
	... 22 more

2024-12-18T15:45:47.094-08:00  WARN 74105 --- [history-service] [foReplicator-%d] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://localhost:8761/eureka/apps/HISTORY-SERVICE": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
2024-12-18T15:45:47.094-08:00  WARN 74105 --- [history-service] [foReplicator-%d] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_HISTORY-SERVICE/10.0.0.83:history-service:8083 - registration failed Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]

2024-12-18T15:45:47.096-08:00  WARN 74105 --- [history-service] [foReplicator-%d] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125) ~[eureka-client-2.0.4.jar:2.0.4]
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105) ~[eureka-client-2.0.4.jar:2.0.4]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]

]]></system-out>
  </testcase>
</testsuite>-e 
=== ./target/surefire-reports/TEST-com.beaconfire.history_service.controller.HistoryControllerTest.xml ===

<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.beaconfire.history_service.controller.HistoryControllerTest" time="0.164" tests="2" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/test-classes:/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/classes:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.0/spring-boot-starter-web-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.0/spring-boot-starter-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.0/spring-boot-starter-logging-3.4.0.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.1/log4j-to-slf4j-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.1/log4j-api-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.0/spring-boot-starter-json-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.1/jackson-datatype-jdk8-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.1/jackson-module-parameter-names-2.18.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-web/6.2.0/spring-web-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-beans/6.2.0/spring-beans-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-webmvc/6.2.0/spring-webmvc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aop/6.2.0/spring-aop-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context/6.2.0/spring-context-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-expression/6.2.0/spring-expression-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.0/spring-boot-starter-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.0/spring-boot-starter-jdbc-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jdbc/6.2.0/spring-jdbc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/orm/hibernate-core/6.6.2.Final/hibernate-core-6.6.2.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/zhangruiqi/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy/1.15.10/byte-buddy-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/zhangruiqi/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-jpa/3.4.0/spring-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-commons/3.4.0/spring-data-commons-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-orm/6.2.0/spring-orm-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-tx/6.2.0/spring-tx-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aspects/6.2.0/spring-aspects-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.0/spring-boot-starter-validation-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.33/tomcat-embed-el-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-client/4.2.0/spring-cloud-starter-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter/4.2.0/spring-cloud-starter-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-context/4.2.0/spring-cloud-context-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/bouncycastle/bcprov-jdk18on/1.78.1/bcprov-jdk18on-1.78.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/4.2.0/spring-cloud-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.4.1/httpclient5-5.4.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.3.1/httpcore5-5.3.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5-h2/5.3.1/httpcore5-h2-5.3.1.jar:/Users/zhangruiqi/.m2/repository/com/netflix/eureka/eureka-client/2.0.4/eureka-client-2.0.4.jar:/Users/zhangruiqi/.m2/repository/com/thoughtworks/xstream/xstream/1.4.20/xstream-1.4.20.jar:/Users/zhangruiqi/.m2/repository/io/github/x-stream/mxparser/1.2.2/mxparser-1.2.2.jar:/Users/zhangruiqi/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/Users/zhangruiqi/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/spectator/spectator-api/1.7.3/spectator-api-1.7.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/zhangruiqi/.m2/repository/commons-codec/commons-codec/1.17.1/commons-codec-1.17.1.jar:/Users/zhangruiqi/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/zhangruiqi/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar:/Users/zhangruiqi/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar:/Users/zhangruiqi/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/zhangruiqi/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/zhangruiqi/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/guava/33.3.1-jre/guava-33.3.1-jre.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/failureaccess/1.0.2/failureaccess-1.0.2.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/zhangruiqi/.m2/repository/org/checkerframework/checker-qual/3.43.0/checker-qual-3.43.0.jar:/Users/zhangruiqi/.m2/repository/com/google/errorprone/error_prone_annotations/2.28.0/error_prone_annotations-2.28.0.jar:/Users/zhangruiqi/.m2/repository/com/google/j2objc/j2objc-annotations/3.0.0/j2objc-annotations-3.0.0.jar:/Users/zhangruiqi/.m2/repository/com/google/code/gson/gson/2.11.0/gson-2.11.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/servo/servo-core/0.5.3/servo-core-0.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/zhangruiqi/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/Users/zhangruiqi/.m2/repository/org/codehaus/jettison/jettison/1.5.4/jettison-1.5.4.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-devtools/3.4.0/spring-boot-devtools-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot/3.4.0/spring-boot-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.0/spring-boot-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-openfeign/4.2.0/spring-cloud-starter-openfeign-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-openfeign-core/4.2.0/spring-cloud-openfeign-core-4.2.0.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-form-spring/13.5/feign-form-spring-13.5.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-form/13.5/feign-form-13.5.jar:/Users/zhangruiqi/.m2/repository/commons-fileupload/commons-fileupload/1.5/commons-fileupload-1.5.jar:/Users/zhangruiqi/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-commons/4.2.0/spring-cloud-commons-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/security/spring-security-crypto/6.4.1/spring-security-crypto-6.4.1.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-core/13.5/feign-core-13.5.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-slf4j/13.5/feign-slf4j-13.5.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.1/jackson-datatype-jsr310-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.1/jackson-annotations-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.1/jackson-core-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.1/jackson-databind-2.18.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-loadbalancer/4.2.0/spring-cloud-starter-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-loadbalancer/4.2.0/spring-cloud-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/reactor-core/3.7.0/reactor-core-3.7.0.jar:/Users/zhangruiqi/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/addons/reactor-extra/3.5.2/reactor-extra-3.5.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.4.0/spring-boot-starter-cache-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context-support/6.2.0/spring-context-support-6.2.0.jar:/Users/zhangruiqi/.m2/repository/com/stoyanr/evictor/1.0.0/evictor-1.0.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.0/spring-boot-starter-tomcat-3.4.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.33/tomcat-embed-core-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.33/tomcat-embed-websocket-10.1.33.jar:/Users/zhangruiqi/.m2/repository/com/mysql/mysql-connector-j/9.1.0/mysql-connector-j-9.1.0.jar:/Users/zhangruiqi/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.0/spring-boot-starter-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test/3.4.0/spring-boot-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.0/spring-boot-test-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/zhangruiqi/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/zhangruiqi/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/zhangruiqi/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/zhangruiqi/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.3/junit-jupiter-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.3/junit-jupiter-api-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-commons/1.11.3/junit-platform-commons-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.3/junit-jupiter-params-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.3/junit-jupiter-engine-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-engine/1.11.3/junit-platform-engine-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.10/byte-buddy-agent-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/zhangruiqi/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/zhangruiqi/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-core/6.2.0/spring-core-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jcl/6.2.0/spring-jcl-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-test/6.2.0/spring-test-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-amqp/3.4.0/spring-boot-starter-amqp-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-messaging/6.2.0/spring-messaging-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-rabbit/3.2.0/spring-rabbit-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-amqp/3.2.0/spring-amqp-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/retry/spring-retry/2.0.10/spring-retry-2.0.10.jar:/Users/zhangruiqi/.m2/repository/com/rabbitmq/amqp-client/5.22.0/amqp-client-5.22.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.4.0/spring-boot-starter-actuator-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.4.0/spring-boot-actuator-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-actuator/3.4.0/spring-boot-actuator-3.4.0.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-observation/1.14.1/micrometer-observation-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-commons/1.14.1/micrometer-commons-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-jakarta9/1.14.1/micrometer-jakarta9-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-core/1.14.1/micrometer-core-1.14.1.jar:/Users/zhangruiqi/.m2/repository/org/hdrhistogram/HdrHistogram/2.2.2/HdrHistogram-2.2.2.jar:/Users/zhangruiqi/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-config/4.2.0/spring-cloud-starter-config-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-config-client/4.2.0/spring-cloud-config-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-bootstrap/4.2.0/spring-cloud-starter-bootstrap-4.2.0.jar:"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="user.timezone" value="America/Los_Angeles"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="APPLICATION_NAME" value="history-service"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/Users/zhangruiqi/Library/Java/JavaVirtualMachines/corretto-17.0.13/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/surefire/surefirebooter-20241218154531799_28.jar /Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/surefire 2024-12-18T15-45-29_335-jvmRun8 surefire-20241218154531799_26tmp surefire_7-20241218154531799_27tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/test-classes:/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/classes:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.0/spring-boot-starter-web-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.0/spring-boot-starter-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.0/spring-boot-starter-logging-3.4.0.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.1/log4j-to-slf4j-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.1/log4j-api-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.0/spring-boot-starter-json-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.1/jackson-datatype-jdk8-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.1/jackson-module-parameter-names-2.18.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-web/6.2.0/spring-web-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-beans/6.2.0/spring-beans-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-webmvc/6.2.0/spring-webmvc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aop/6.2.0/spring-aop-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context/6.2.0/spring-context-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-expression/6.2.0/spring-expression-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.0/spring-boot-starter-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.0/spring-boot-starter-jdbc-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jdbc/6.2.0/spring-jdbc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/orm/hibernate-core/6.6.2.Final/hibernate-core-6.6.2.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/zhangruiqi/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy/1.15.10/byte-buddy-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/zhangruiqi/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-jpa/3.4.0/spring-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-commons/3.4.0/spring-data-commons-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-orm/6.2.0/spring-orm-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-tx/6.2.0/spring-tx-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aspects/6.2.0/spring-aspects-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.0/spring-boot-starter-validation-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.33/tomcat-embed-el-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-client/4.2.0/spring-cloud-starter-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter/4.2.0/spring-cloud-starter-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-context/4.2.0/spring-cloud-context-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/bouncycastle/bcprov-jdk18on/1.78.1/bcprov-jdk18on-1.78.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/4.2.0/spring-cloud-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.4.1/httpclient5-5.4.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.3.1/httpcore5-5.3.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5-h2/5.3.1/httpcore5-h2-5.3.1.jar:/Users/zhangruiqi/.m2/repository/com/netflix/eureka/eureka-client/2.0.4/eureka-client-2.0.4.jar:/Users/zhangruiqi/.m2/repository/com/thoughtworks/xstream/xstream/1.4.20/xstream-1.4.20.jar:/Users/zhangruiqi/.m2/repository/io/github/x-stream/mxparser/1.2.2/mxparser-1.2.2.jar:/Users/zhangruiqi/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/Users/zhangruiqi/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/spectator/spectator-api/1.7.3/spectator-api-1.7.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/zhangruiqi/.m2/repository/commons-codec/commons-codec/1.17.1/commons-codec-1.17.1.jar:/Users/zhangruiqi/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/zhangruiqi/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar:/Users/zhangruiqi/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar:/Users/zhangruiqi/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/zhangruiqi/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/zhangruiqi/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/guava/33.3.1-jre/guava-33.3.1-jre.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/failureaccess/1.0.2/failureaccess-1.0.2.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/zhangruiqi/.m2/repository/org/checkerframework/checker-qual/3.43.0/checker-qual-3.43.0.jar:/Users/zhangruiqi/.m2/repository/com/google/errorprone/error_prone_annotations/2.28.0/error_prone_annotations-2.28.0.jar:/Users/zhangruiqi/.m2/repository/com/google/j2objc/j2objc-annotations/3.0.0/j2objc-annotations-3.0.0.jar:/Users/zhangruiqi/.m2/repository/com/google/code/gson/gson/2.11.0/gson-2.11.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/servo/servo-core/0.5.3/servo-core-0.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/zhangruiqi/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/Users/zhangruiqi/.m2/repository/org/codehaus/jettison/jettison/1.5.4/jettison-1.5.4.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-devtools/3.4.0/spring-boot-devtools-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot/3.4.0/spring-boot-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.0/spring-boot-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-openfeign/4.2.0/spring-cloud-starter-openfeign-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-openfeign-core/4.2.0/spring-cloud-openfeign-core-4.2.0.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-form-spring/13.5/feign-form-spring-13.5.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-form/13.5/feign-form-13.5.jar:/Users/zhangruiqi/.m2/repository/commons-fileupload/commons-fileupload/1.5/commons-fileupload-1.5.jar:/Users/zhangruiqi/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-commons/4.2.0/spring-cloud-commons-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/security/spring-security-crypto/6.4.1/spring-security-crypto-6.4.1.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-core/13.5/feign-core-13.5.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-slf4j/13.5/feign-slf4j-13.5.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.1/jackson-datatype-jsr310-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.1/jackson-annotations-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.1/jackson-core-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.1/jackson-databind-2.18.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-loadbalancer/4.2.0/spring-cloud-starter-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-loadbalancer/4.2.0/spring-cloud-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/reactor-core/3.7.0/reactor-core-3.7.0.jar:/Users/zhangruiqi/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/addons/reactor-extra/3.5.2/reactor-extra-3.5.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.4.0/spring-boot-starter-cache-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context-support/6.2.0/spring-context-support-6.2.0.jar:/Users/zhangruiqi/.m2/repository/com/stoyanr/evictor/1.0.0/evictor-1.0.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.0/spring-boot-starter-tomcat-3.4.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.33/tomcat-embed-core-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.33/tomcat-embed-websocket-10.1.33.jar:/Users/zhangruiqi/.m2/repository/com/mysql/mysql-connector-j/9.1.0/mysql-connector-j-9.1.0.jar:/Users/zhangruiqi/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.0/spring-boot-starter-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test/3.4.0/spring-boot-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.0/spring-boot-test-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/zhangruiqi/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/zhangruiqi/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/zhangruiqi/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/zhangruiqi/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.3/junit-jupiter-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.3/junit-jupiter-api-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-commons/1.11.3/junit-platform-commons-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.3/junit-jupiter-params-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.3/junit-jupiter-engine-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-engine/1.11.3/junit-platform-engine-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.10/byte-buddy-agent-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/zhangruiqi/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/zhangruiqi/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-core/6.2.0/spring-core-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jcl/6.2.0/spring-jcl-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-test/6.2.0/spring-test-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-amqp/3.4.0/spring-boot-starter-amqp-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-messaging/6.2.0/spring-messaging-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-rabbit/3.2.0/spring-rabbit-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-amqp/3.2.0/spring-amqp-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/retry/spring-retry/2.0.10/spring-retry-2.0.10.jar:/Users/zhangruiqi/.m2/repository/com/rabbitmq/amqp-client/5.22.0/amqp-client-5.22.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.4.0/spring-boot-starter-actuator-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.4.0/spring-boot-actuator-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-actuator/3.4.0/spring-boot-actuator-3.4.0.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-observation/1.14.1/micrometer-observation-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-commons/1.14.1/micrometer-commons-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-jakarta9/1.14.1/micrometer-jakarta9-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-core/1.14.1/micrometer-core-1.14.1.jar:/Users/zhangruiqi/.m2/repository/org/hdrhistogram/HdrHistogram/2.2.2/HdrHistogram-2.2.2.jar:/Users/zhangruiqi/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-config/4.2.0/spring-cloud-starter-config-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-config-client/4.2.0/spring-cloud-config-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-bootstrap/4.2.0/spring-cloud-starter-bootstrap-4.2.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/zhangruiqi"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-10-15"/>
    <property name="java.home" value="/Users/zhangruiqi/Library/Java/JavaVirtualMachines/corretto-17.0.13/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/surefire/surefirebooter-20241218154531799_28.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="17.0.13+11-LTS"/>
    <property name="user.name" value="zhangruiqi"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="14.5"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-17.0.13.11.1"/>
    <property name="localRepository" value="/Users/zhangruiqi/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-17/issues/"/>
    <property name="java.io.tmpdir" value="/var/folders/21/8jwtn5ps4wb5rvh_md4yqk_80000gn/T/"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.13"/>
    <property name="user.dir" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="74105"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/zhangruiqi/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="17.0.13+11-LTS"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="61.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[history-service] "/>
  </properties>
  <testcase name="createHistory_ShouldReturnCreatedHistory" classname="com.beaconfire.history_service.controller.HistoryControllerTest" time="0.146">
    <system-out><![CDATA[2024-12-18T15:45:47.678-08:00  INFO 74105 --- [history-service] [           main] c.b.h.controller.HistoryController       : Received request to create history for user 1 and post post123
]]></system-out>
  </testcase>
  <testcase name="getUserHistory_ShouldReturnHistoryList" classname="com.beaconfire.history_service.controller.HistoryControllerTest" time="0.005">
    <system-out><![CDATA[2024-12-18T15:45:47.695-08:00  INFO 74105 --- [history-service] [           main] c.b.h.controller.HistoryController       : Received request to get history for user 1
]]></system-out>
  </testcase>
</testsuite>-e 
=== ./target/surefire-reports/TEST-com.beaconfire.history_service.service.HistoryServiceTest.xml ===

<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.beaconfire.history_service.service.HistoryServiceTest" time="0.086" tests="2" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/test-classes:/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/classes:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.0/spring-boot-starter-web-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.0/spring-boot-starter-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.0/spring-boot-starter-logging-3.4.0.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.1/log4j-to-slf4j-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.1/log4j-api-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.0/spring-boot-starter-json-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.1/jackson-datatype-jdk8-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.1/jackson-module-parameter-names-2.18.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-web/6.2.0/spring-web-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-beans/6.2.0/spring-beans-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-webmvc/6.2.0/spring-webmvc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aop/6.2.0/spring-aop-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context/6.2.0/spring-context-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-expression/6.2.0/spring-expression-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.0/spring-boot-starter-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.0/spring-boot-starter-jdbc-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jdbc/6.2.0/spring-jdbc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/orm/hibernate-core/6.6.2.Final/hibernate-core-6.6.2.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/zhangruiqi/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy/1.15.10/byte-buddy-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/zhangruiqi/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-jpa/3.4.0/spring-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-commons/3.4.0/spring-data-commons-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-orm/6.2.0/spring-orm-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-tx/6.2.0/spring-tx-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aspects/6.2.0/spring-aspects-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.0/spring-boot-starter-validation-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.33/tomcat-embed-el-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-client/4.2.0/spring-cloud-starter-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter/4.2.0/spring-cloud-starter-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-context/4.2.0/spring-cloud-context-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/bouncycastle/bcprov-jdk18on/1.78.1/bcprov-jdk18on-1.78.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/4.2.0/spring-cloud-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.4.1/httpclient5-5.4.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.3.1/httpcore5-5.3.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5-h2/5.3.1/httpcore5-h2-5.3.1.jar:/Users/zhangruiqi/.m2/repository/com/netflix/eureka/eureka-client/2.0.4/eureka-client-2.0.4.jar:/Users/zhangruiqi/.m2/repository/com/thoughtworks/xstream/xstream/1.4.20/xstream-1.4.20.jar:/Users/zhangruiqi/.m2/repository/io/github/x-stream/mxparser/1.2.2/mxparser-1.2.2.jar:/Users/zhangruiqi/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/Users/zhangruiqi/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/spectator/spectator-api/1.7.3/spectator-api-1.7.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/zhangruiqi/.m2/repository/commons-codec/commons-codec/1.17.1/commons-codec-1.17.1.jar:/Users/zhangruiqi/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/zhangruiqi/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar:/Users/zhangruiqi/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar:/Users/zhangruiqi/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/zhangruiqi/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/zhangruiqi/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/guava/33.3.1-jre/guava-33.3.1-jre.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/failureaccess/1.0.2/failureaccess-1.0.2.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/zhangruiqi/.m2/repository/org/checkerframework/checker-qual/3.43.0/checker-qual-3.43.0.jar:/Users/zhangruiqi/.m2/repository/com/google/errorprone/error_prone_annotations/2.28.0/error_prone_annotations-2.28.0.jar:/Users/zhangruiqi/.m2/repository/com/google/j2objc/j2objc-annotations/3.0.0/j2objc-annotations-3.0.0.jar:/Users/zhangruiqi/.m2/repository/com/google/code/gson/gson/2.11.0/gson-2.11.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/servo/servo-core/0.5.3/servo-core-0.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/zhangruiqi/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/Users/zhangruiqi/.m2/repository/org/codehaus/jettison/jettison/1.5.4/jettison-1.5.4.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-devtools/3.4.0/spring-boot-devtools-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot/3.4.0/spring-boot-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.0/spring-boot-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-openfeign/4.2.0/spring-cloud-starter-openfeign-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-openfeign-core/4.2.0/spring-cloud-openfeign-core-4.2.0.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-form-spring/13.5/feign-form-spring-13.5.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-form/13.5/feign-form-13.5.jar:/Users/zhangruiqi/.m2/repository/commons-fileupload/commons-fileupload/1.5/commons-fileupload-1.5.jar:/Users/zhangruiqi/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-commons/4.2.0/spring-cloud-commons-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/security/spring-security-crypto/6.4.1/spring-security-crypto-6.4.1.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-core/13.5/feign-core-13.5.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-slf4j/13.5/feign-slf4j-13.5.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.1/jackson-datatype-jsr310-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.1/jackson-annotations-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.1/jackson-core-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.1/jackson-databind-2.18.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-loadbalancer/4.2.0/spring-cloud-starter-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-loadbalancer/4.2.0/spring-cloud-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/reactor-core/3.7.0/reactor-core-3.7.0.jar:/Users/zhangruiqi/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/addons/reactor-extra/3.5.2/reactor-extra-3.5.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.4.0/spring-boot-starter-cache-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context-support/6.2.0/spring-context-support-6.2.0.jar:/Users/zhangruiqi/.m2/repository/com/stoyanr/evictor/1.0.0/evictor-1.0.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.0/spring-boot-starter-tomcat-3.4.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.33/tomcat-embed-core-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.33/tomcat-embed-websocket-10.1.33.jar:/Users/zhangruiqi/.m2/repository/com/mysql/mysql-connector-j/9.1.0/mysql-connector-j-9.1.0.jar:/Users/zhangruiqi/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.0/spring-boot-starter-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test/3.4.0/spring-boot-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.0/spring-boot-test-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/zhangruiqi/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/zhangruiqi/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/zhangruiqi/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/zhangruiqi/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.3/junit-jupiter-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.3/junit-jupiter-api-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-commons/1.11.3/junit-platform-commons-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.3/junit-jupiter-params-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.3/junit-jupiter-engine-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-engine/1.11.3/junit-platform-engine-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.10/byte-buddy-agent-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/zhangruiqi/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/zhangruiqi/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-core/6.2.0/spring-core-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jcl/6.2.0/spring-jcl-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-test/6.2.0/spring-test-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-amqp/3.4.0/spring-boot-starter-amqp-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-messaging/6.2.0/spring-messaging-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-rabbit/3.2.0/spring-rabbit-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-amqp/3.2.0/spring-amqp-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/retry/spring-retry/2.0.10/spring-retry-2.0.10.jar:/Users/zhangruiqi/.m2/repository/com/rabbitmq/amqp-client/5.22.0/amqp-client-5.22.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.4.0/spring-boot-starter-actuator-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.4.0/spring-boot-actuator-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-actuator/3.4.0/spring-boot-actuator-3.4.0.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-observation/1.14.1/micrometer-observation-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-commons/1.14.1/micrometer-commons-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-jakarta9/1.14.1/micrometer-jakarta9-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-core/1.14.1/micrometer-core-1.14.1.jar:/Users/zhangruiqi/.m2/repository/org/hdrhistogram/HdrHistogram/2.2.2/HdrHistogram-2.2.2.jar:/Users/zhangruiqi/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-config/4.2.0/spring-cloud-starter-config-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-config-client/4.2.0/spring-cloud-config-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-bootstrap/4.2.0/spring-cloud-starter-bootstrap-4.2.0.jar:"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="user.timezone" value="America/Los_Angeles"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="APPLICATION_NAME" value="history-service"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/Users/zhangruiqi/Library/Java/JavaVirtualMachines/corretto-17.0.13/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/surefire/surefirebooter-20241218154531799_28.jar /Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/surefire 2024-12-18T15-45-29_335-jvmRun8 surefire-20241218154531799_26tmp surefire_7-20241218154531799_27tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/test-classes:/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/classes:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.0/spring-boot-starter-web-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.0/spring-boot-starter-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.0/spring-boot-starter-logging-3.4.0.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.1/log4j-to-slf4j-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.1/log4j-api-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.0/spring-boot-starter-json-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.1/jackson-datatype-jdk8-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.1/jackson-module-parameter-names-2.18.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-web/6.2.0/spring-web-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-beans/6.2.0/spring-beans-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-webmvc/6.2.0/spring-webmvc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aop/6.2.0/spring-aop-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context/6.2.0/spring-context-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-expression/6.2.0/spring-expression-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.0/spring-boot-starter-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.0/spring-boot-starter-jdbc-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jdbc/6.2.0/spring-jdbc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/orm/hibernate-core/6.6.2.Final/hibernate-core-6.6.2.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/zhangruiqi/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy/1.15.10/byte-buddy-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/zhangruiqi/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-jpa/3.4.0/spring-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-commons/3.4.0/spring-data-commons-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-orm/6.2.0/spring-orm-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-tx/6.2.0/spring-tx-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aspects/6.2.0/spring-aspects-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.0/spring-boot-starter-validation-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.33/tomcat-embed-el-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-client/4.2.0/spring-cloud-starter-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter/4.2.0/spring-cloud-starter-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-context/4.2.0/spring-cloud-context-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/bouncycastle/bcprov-jdk18on/1.78.1/bcprov-jdk18on-1.78.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/4.2.0/spring-cloud-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.4.1/httpclient5-5.4.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.3.1/httpcore5-5.3.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5-h2/5.3.1/httpcore5-h2-5.3.1.jar:/Users/zhangruiqi/.m2/repository/com/netflix/eureka/eureka-client/2.0.4/eureka-client-2.0.4.jar:/Users/zhangruiqi/.m2/repository/com/thoughtworks/xstream/xstream/1.4.20/xstream-1.4.20.jar:/Users/zhangruiqi/.m2/repository/io/github/x-stream/mxparser/1.2.2/mxparser-1.2.2.jar:/Users/zhangruiqi/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/Users/zhangruiqi/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/spectator/spectator-api/1.7.3/spectator-api-1.7.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/zhangruiqi/.m2/repository/commons-codec/commons-codec/1.17.1/commons-codec-1.17.1.jar:/Users/zhangruiqi/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/zhangruiqi/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar:/Users/zhangruiqi/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar:/Users/zhangruiqi/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/zhangruiqi/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/zhangruiqi/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/guava/33.3.1-jre/guava-33.3.1-jre.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/failureaccess/1.0.2/failureaccess-1.0.2.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/zhangruiqi/.m2/repository/org/checkerframework/checker-qual/3.43.0/checker-qual-3.43.0.jar:/Users/zhangruiqi/.m2/repository/com/google/errorprone/error_prone_annotations/2.28.0/error_prone_annotations-2.28.0.jar:/Users/zhangruiqi/.m2/repository/com/google/j2objc/j2objc-annotations/3.0.0/j2objc-annotations-3.0.0.jar:/Users/zhangruiqi/.m2/repository/com/google/code/gson/gson/2.11.0/gson-2.11.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/servo/servo-core/0.5.3/servo-core-0.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/zhangruiqi/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/Users/zhangruiqi/.m2/repository/org/codehaus/jettison/jettison/1.5.4/jettison-1.5.4.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-devtools/3.4.0/spring-boot-devtools-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot/3.4.0/spring-boot-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.0/spring-boot-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-openfeign/4.2.0/spring-cloud-starter-openfeign-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-openfeign-core/4.2.0/spring-cloud-openfeign-core-4.2.0.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-form-spring/13.5/feign-form-spring-13.5.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-form/13.5/feign-form-13.5.jar:/Users/zhangruiqi/.m2/repository/commons-fileupload/commons-fileupload/1.5/commons-fileupload-1.5.jar:/Users/zhangruiqi/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-commons/4.2.0/spring-cloud-commons-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/security/spring-security-crypto/6.4.1/spring-security-crypto-6.4.1.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-core/13.5/feign-core-13.5.jar:/Users/zhangruiqi/.m2/repository/io/github/openfeign/feign-slf4j/13.5/feign-slf4j-13.5.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.1/jackson-datatype-jsr310-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.1/jackson-annotations-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.1/jackson-core-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.1/jackson-databind-2.18.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-loadbalancer/4.2.0/spring-cloud-starter-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-loadbalancer/4.2.0/spring-cloud-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/reactor-core/3.7.0/reactor-core-3.7.0.jar:/Users/zhangruiqi/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/addons/reactor-extra/3.5.2/reactor-extra-3.5.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.4.0/spring-boot-starter-cache-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context-support/6.2.0/spring-context-support-6.2.0.jar:/Users/zhangruiqi/.m2/repository/com/stoyanr/evictor/1.0.0/evictor-1.0.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.0/spring-boot-starter-tomcat-3.4.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.33/tomcat-embed-core-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.33/tomcat-embed-websocket-10.1.33.jar:/Users/zhangruiqi/.m2/repository/com/mysql/mysql-connector-j/9.1.0/mysql-connector-j-9.1.0.jar:/Users/zhangruiqi/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.0/spring-boot-starter-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test/3.4.0/spring-boot-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.0/spring-boot-test-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/zhangruiqi/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/zhangruiqi/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/zhangruiqi/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/zhangruiqi/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.3/junit-jupiter-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.3/junit-jupiter-api-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-commons/1.11.3/junit-platform-commons-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.3/junit-jupiter-params-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.3/junit-jupiter-engine-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-engine/1.11.3/junit-platform-engine-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.10/byte-buddy-agent-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/zhangruiqi/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/zhangruiqi/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-core/6.2.0/spring-core-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jcl/6.2.0/spring-jcl-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-test/6.2.0/spring-test-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-amqp/3.4.0/spring-boot-starter-amqp-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-messaging/6.2.0/spring-messaging-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-rabbit/3.2.0/spring-rabbit-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-amqp/3.2.0/spring-amqp-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/retry/spring-retry/2.0.10/spring-retry-2.0.10.jar:/Users/zhangruiqi/.m2/repository/com/rabbitmq/amqp-client/5.22.0/amqp-client-5.22.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.4.0/spring-boot-starter-actuator-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.4.0/spring-boot-actuator-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-actuator/3.4.0/spring-boot-actuator-3.4.0.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-observation/1.14.1/micrometer-observation-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-commons/1.14.1/micrometer-commons-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-jakarta9/1.14.1/micrometer-jakarta9-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-core/1.14.1/micrometer-core-1.14.1.jar:/Users/zhangruiqi/.m2/repository/org/hdrhistogram/HdrHistogram/2.2.2/HdrHistogram-2.2.2.jar:/Users/zhangruiqi/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-config/4.2.0/spring-cloud-starter-config-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-config-client/4.2.0/spring-cloud-config-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-bootstrap/4.2.0/spring-cloud-starter-bootstrap-4.2.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/zhangruiqi"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-10-15"/>
    <property name="java.home" value="/Users/zhangruiqi/Library/Java/JavaVirtualMachines/corretto-17.0.13/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service/target/surefire/surefirebooter-20241218154531799_28.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="17.0.13+11-LTS"/>
    <property name="user.name" value="zhangruiqi"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="14.5"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-17.0.13.11.1"/>
    <property name="localRepository" value="/Users/zhangruiqi/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-17/issues/"/>
    <property name="java.io.tmpdir" value="/var/folders/21/8jwtn5ps4wb5rvh_md4yqk_80000gn/T/"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.13"/>
    <property name="user.dir" value="/Users/zhangruiqi/Desktop/new-version-group-project/online-forum-app-backend/history-service"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="74105"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/zhangruiqi/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="17.0.13+11-LTS"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="61.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[history-service] "/>
  </properties>
  <testcase name="createHistory_NewEntry_ShouldCreateHistory" classname="com.beaconfire.history_service.service.HistoryServiceTest" time="0.082">
    <system-out><![CDATA[2024-12-18T15:45:47.794-08:00  INFO 74105 --- [history-service] [           main] c.b.h.service.HistoryService             : Creating/Updating history for user 1 and post post123
]]></system-out>
  </testcase>
  <testcase name="getUserHistory_ShouldReturnHistoryList" classname="com.beaconfire.history_service.service.HistoryServiceTest" time="0.003">
    <system-out><![CDATA[2024-12-18T15:45:47.798-08:00  INFO 74105 --- [history-service] [           main] c.b.h.service.HistoryService             : Fetching history for user 1
]]></system-out>
  </testcase>
</testsuite>-e 
=== ./pom.xml ===

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.beaconfire</groupId>
	<artifactId>history-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>history-service</name>
	<description>history-service</description>

	<properties>
		<java.version>17</java.version>
		<spring-cloud.version>2024.0.0</spring-cloud.version>
	</properties>

	<dependencies>
		<!-- Spring Boot Starters -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- Spring Cloud -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<!-- Development Tools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- OpenFeign -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-loadbalancer</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Database -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bootstrap</artifactId>
		</dependency>

	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>history-service</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>-e 
=== ./.mvn/wrapper/maven-wrapper.properties ===

# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
wrapperVersion=3.3.2
distributionType=only-script
distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.9/apache-maven-3.9.9-bin.zip
-e 
=== ./src/test/java/com/beaconfire/history_service/controller/HistoryControllerTest.java ===

package com.beaconfire.history_service.controller;

import com.beaconfire.history_service.dto.HistoryCreateDTO;
import com.beaconfire.history_service.dto.HistoryResponseDTO;
import com.beaconfire.history_service.service.HistoryService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.ResponseEntity;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

@ExtendWith(MockitoExtension.class)
class HistoryControllerTest {

    @Mock
    private HistoryService historyService;

    @InjectMocks
    private HistoryController historyController;

    private HistoryResponseDTO testResponseDTO;
    private HistoryCreateDTO testCreateDTO;

    @BeforeEach
    void setUp() {
        testResponseDTO = HistoryResponseDTO.builder()
                .historyId(1)
                .userId(1)
                .postId("post123")
                .viewDate(LocalDateTime.now())
                .createdAt(LocalDateTime.now())
                .updatedAt(LocalDateTime.now())
                .build();

        testCreateDTO = HistoryCreateDTO.builder()
                .userId(1)
                .postId("post123")
                .build();
    }

    @Test
    void getUserHistory_ShouldReturnHistoryList() {
        when(historyService.getUserHistory(1))
                .thenReturn(Arrays.asList(testResponseDTO));

        ResponseEntity<List<HistoryResponseDTO>> response =
                historyController.getUserHistory(1);

        assertTrue(response.getStatusCode().is2xxSuccessful());
        assertNotNull(response.getBody());
        assertEquals(1, response.getBody().size());
        verify(historyService).getUserHistory(1);
    }

    @Test
    void createHistory_ShouldReturnCreatedHistory() {
        when(historyService.createHistory(any(HistoryCreateDTO.class)))
                .thenReturn(testResponseDTO);

        ResponseEntity<HistoryResponseDTO> response =
                historyController.createHistory(testCreateDTO);

        assertTrue(response.getStatusCode().is2xxSuccessful());
        assertNotNull(response.getBody());
        assertEquals(testResponseDTO.getHistoryId(),
                response.getBody().getHistoryId());
        verify(historyService).createHistory(testCreateDTO);
    }
}
-e 
=== ./src/test/java/com/beaconfire/history_service/HistoryServiceApplicationTests.java ===

package com.beaconfire.history_service;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class HistoryServiceApplicationTests {

	@Test
	void contextLoads() {
	}

}
-e 
=== ./src/test/java/com/beaconfire/history_service/service/HistoryServiceTest.java ===

package com.beaconfire.history_service.service;

import com.beaconfire.history_service.dto.HistoryCreateDTO;
import com.beaconfire.history_service.dto.HistoryResponseDTO;
import com.beaconfire.history_service.entity.History;
import com.beaconfire.history_service.repository.HistoryRepository;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;

import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

@ExtendWith(MockitoExtension.class)
class HistoryServiceTest {

    @Mock
    private HistoryRepository historyRepository;

    @Mock
    private ValidationService validationService;

    @InjectMocks
    private HistoryService historyService;

    private History testHistory;
    private HistoryCreateDTO testCreateDTO;

    @BeforeEach
    void setUp() {
        testHistory = History.builder()
                .historyId(1)
                .userId(1)
                .postId("post123")
                .viewDate(LocalDateTime.now())
                .createdAt(LocalDateTime.now())
                .updatedAt(LocalDateTime.now())
                .build();

        testCreateDTO = HistoryCreateDTO.builder()
                .userId(1)
                .postId("post123")
                .build();
    }

    @Test
    void getUserHistory_ShouldReturnHistoryList() {
        when(historyRepository.findByUserIdOrderByViewDateDesc(1))
                .thenReturn(Arrays.asList(testHistory));

        List<HistoryResponseDTO> result = historyService.getUserHistory(1);

        assertNotNull(result);
        assertEquals(1, result.size());
        assertEquals(testHistory.getHistoryId(), result.get(0).getHistoryId());
        verify(historyRepository).findByUserIdOrderByViewDateDesc(1);
    }

    @Test
    void createHistory_NewEntry_ShouldCreateHistory() {
        when(historyRepository.findByUserIdAndPostId(1, "post123"))
                .thenReturn(Optional.empty());
        when(historyRepository.save(any(History.class)))
                .thenReturn(testHistory);
        doNothing().when(validationService)
                .validateUserAndPost(any(), any());

        HistoryResponseDTO result = historyService.createHistory(testCreateDTO);

        assertNotNull(result);
        assertEquals(testHistory.getHistoryId(), result.getHistoryId());
        verify(historyRepository).save(any(History.class));
    }
}-e 
=== ./src/main/resources/bootstrap.yml ===

# The bootstrap.yml (or bootstrap.properties) file in a Spring Boot application
# is used for early initialization during the application startup process.
# It is loaded before the main application.yml or application.properties.
spring:
  application:
    name: history-service
  profiles:
    active: production # config-client-production.property(or yml)
# This profile needs to match the server's profile
  cloud:
    config:
      name: history-service # need to match the first config file in GitHub, By default use the application name
      uri: https://cloudconfig.nico-nico-nii.com/ # point to config server location
      label: main # branch
# Getting cloud config from the server on port 8888

management:
  endpoints:
    web:
      exposure:
        include: "*" # Exposes all actuator's endpoints, includes /refresh

-e 
=== ./src/main/resources/application.properties ===

# Application Configuration
spring.application.name=history-service
server.port=8083

# Database Configuration
#spring.datasource.url=jdbc:mysql://database-1.cjwa24k2srfd.us-east-2.rds.amazonaws.com:3306/history_db?useSSL=true&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=groupproject
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Database Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1

# JPA/Hibernate Configuration
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.properties.hibernate.format_sql=true

# Cache Configuration
spring.cache.type=simple

# Eureka Configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.client.enabled=true

# Logging Configuration
logging.level.com.beaconfire=DEBUG
logging.level.org.springframework=INFO
logging.level.org.hibernate=INFO

# RabbitMQ Connection Settings
spring.rabbitmq.host=b-420b96b0-7ce2-4393-9684-0ede382d6959.mq.us-east-2.amazonaws.com
spring.rabbitmq.port=5671
spring.rabbitmq.username=groupproject
spring.rabbitmq.password=groupproject

# RabbitMQ SSL Configuration
spring.rabbitmq.ssl.enabled=true
spring.rabbitmq.ssl.algorithm=TLSv1.2
spring.rabbitmq.ssl.verify-hostname=true

management.endpoints.web.exposure.include=*
management.endpoint.refresh.enabled=true


-e 
=== ./src/main/java/com/beaconfire/history_service/dto/HistoryCreateDTO.java ===

package com.beaconfire.history_service.dto;

import jakarta.validation.constraints.NotNull;
import lombok.Data;
import lombok.Builder;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class HistoryCreateDTO {
    @NotNull(message = "User ID cannot be null")
    private Integer userId;

    @NotNull(message = "Post ID cannot be null")
    private String postId;
}
-e 
=== ./src/main/java/com/beaconfire/history_service/dto/post/PostDTO.java ===

package com.beaconfire.history_service.dto.post;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.time.LocalDateTime;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class PostDTO {
    private String postId;
    private String title;
    private String content;
    private Integer userId;
    private String accessibility;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
}
-e 
=== ./src/main/java/com/beaconfire/history_service/dto/DataResponse.java ===

package com.beaconfire.history_service.dto;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class DataResponse {
    private boolean success;
    private String message;
    private Object data;
}-e 
=== ./src/main/java/com/beaconfire/history_service/dto/user/UserDTO.java ===

package com.beaconfire.history_service.dto.user;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.time.LocalDateTime;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class UserDTO {
    private Integer id;
    private String firstName;
    private String lastName;
    private String email;
    private UserType type;
    private Boolean active;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private String profileImageUrl;
}-e 
=== ./src/main/java/com/beaconfire/history_service/dto/user/UserType.java ===

package com.beaconfire.history_service.dto.user;

public enum UserType {
    VISITOR,
    NORMAL,
    ADMIN,
    SUPERADMIN
}-e 
=== ./src/main/java/com/beaconfire/history_service/dto/HistoryResponseDTO.java ===

package com.beaconfire.history_service.dto;

import lombok.Data;
import java.time.LocalDateTime;
import lombok.Builder;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class HistoryResponseDTO {
    private Integer historyId;
    private Integer userId;
    private String postId;
    private LocalDateTime viewDate;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
}-e 
=== ./src/main/java/com/beaconfire/history_service/repository/HistoryRepository.java ===

package com.beaconfire.history_service.repository;

import com.beaconfire.history_service.entity.History;
import jakarta.validation.constraints.NotNull;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import java.util.List;
import java.util.Optional;

@Repository
public interface HistoryRepository extends JpaRepository<History, Integer> {
    List<History> findByUserIdOrderByViewDateDesc(Integer userId);

    @Query("SELECT h FROM History h WHERE h.userId = :userId AND h.postId = :postId")
    Optional<History> findByUserIdAndPostId(
            @Param("userId") Integer userId,
            @Param("postId") String postId);
}-e 
=== ./src/main/java/com/beaconfire/history_service/feign/PostFeignClient.java ===

package com.beaconfire.history_service.feign;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.beaconfire.history_service.dto.DataResponse;

@FeignClient(name = "posts-service", path = "/posts")
public interface PostFeignClient {
    @GetMapping("/{postId}")
    DataResponse getPostById(@PathVariable("postId") String postId);
}-e 
=== ./src/main/java/com/beaconfire/history_service/feign/UserFeignClient.java ===

package com.beaconfire.history_service.feign;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.beaconfire.history_service.dto.DataResponse;

@FeignClient(name = "users-service", path = "/users")
public interface UserFeignClient {
    @GetMapping("/{id}")
    DataResponse getUserById(@PathVariable("id") Integer userId);
}
-e 
=== ./src/main/java/com/beaconfire/history_service/ServletInitializer.java ===

package com.beaconfire.history_service;

import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;

public class ServletInitializer extends SpringBootServletInitializer {

	@Override
	protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
		return application.sources(HistoryServiceApplication.class);
	}

}
-e 
=== ./src/main/java/com/beaconfire/history_service/entity/History.java ===

package com.beaconfire.history_service.entity;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.time.LocalDateTime;

@Entity
@Table(name = "history")
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class History {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer historyId;

    @Column(nullable = false)
    private Integer userId;

    @Column(nullable = false)
    private String postId;

    @Column(nullable = false)
    private LocalDateTime viewDate;

    @Column(nullable = false, updatable = false)
    private LocalDateTime createdAt;

    @Column(nullable = false)
    private LocalDateTime updatedAt;

    @PrePersist
    protected void onCreate() {
        createdAt = LocalDateTime.now();
        updatedAt = LocalDateTime.now();
    }

    @PreUpdate
    protected void onUpdate() {
        updatedAt = LocalDateTime.now();
    }
}
-e 
=== ./src/main/java/com/beaconfire/history_service/controller/HistoryController.java ===

package com.beaconfire.history_service.controller;

import com.beaconfire.history_service.dto.HistoryCreateDTO;
import com.beaconfire.history_service.dto.HistoryResponseDTO;
import com.beaconfire.history_service.service.HistoryService;
import jakarta.validation.Valid;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import java.util.List;

@RefreshScope
@RestController
@RequestMapping("/api/history")
@Slf4j
public class HistoryController {
    private final HistoryService historyService;

    @Value("${user.role}")
    private String userRole;

    public HistoryController(HistoryService historyService) {
        this.historyService = historyService;
    }

    @GetMapping("/user/{userId}")
    public ResponseEntity<List<HistoryResponseDTO>> getUserHistory(
            @PathVariable Integer userId) {
        log.info("Received request to get history for user {}", userId);
        return ResponseEntity.ok(historyService.getUserHistory(userId));
    }

    @GetMapping("/config")
    public ResponseEntity<String> getConfig() {
        log.info("Received request to get configuration");
        return ResponseEntity.ok(userRole);
    }

    @PostMapping
    public ResponseEntity<HistoryResponseDTO> createHistory(
            @Valid @RequestBody HistoryCreateDTO dto) {
        log.info("Received request to create history for user {} and post {}",
                dto.getUserId(), dto.getPostId());
        return ResponseEntity.ok(historyService.createHistory(dto));
    }
}-e 
=== ./src/main/java/com/beaconfire/history_service/HistoryServiceApplication.java ===

package com.beaconfire.history_service;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
import org.springframework.cache.annotation.EnableCaching;
import org.springframework.cloud.openfeign.EnableFeignClients;

@SpringBootApplication
@EnableDiscoveryClient
@EnableFeignClients(basePackages = "com.beaconfire.history_service.feign")
@EnableCaching
public class HistoryServiceApplication {
	public static void main(String[] args) {
		System.out.print("HISTORY SERVICE RUNNING XXXXX");
		SpringApplication.run(HistoryServiceApplication.class, args);
	}
}-e 
=== ./src/main/java/com/beaconfire/history_service/service/ValidationService.java ===

package com.beaconfire.history_service.service;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.stereotype.Service;

import com.beaconfire.history_service.dto.DataResponse;
import com.beaconfire.history_service.feign.PostFeignClient;
import com.beaconfire.history_service.feign.UserFeignClient;
import com.beaconfire.history_service.exception.ValidationException;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class ValidationService {
    private final UserFeignClient userFeignClient;
    private final PostFeignClient postFeignClient;
    private final ObjectMapper objectMapper;

    public void validateUserAndPost(Integer userId, String postId) {
        try {
            DataResponse userResponse = userFeignClient.getUserById(userId);
            if (!userResponse.isSuccess()) {
                throw new ValidationException("User not found with ID: " + userId);
            }

        } catch (Exception e) {
            throw new ValidationException("Failed to validate user: " + e.getMessage());
        }
        /*
        try {
            DataResponse postResponse = postFeignClient.getPostById(postId);
            if (!postResponse.isSuccess()) {
                throw new ValidationException("Post not found with ID: " + postId);
            }

        } catch (Exception e) {
            throw new ValidationException("Failed to validate post: " + e.getMessage());
        }
         */
    }
}-e 
=== ./src/main/java/com/beaconfire/history_service/service/HistoryService.java ===

package com.beaconfire.history_service.service;

import com.beaconfire.history_service.dto.HistoryCreateDTO;
import com.beaconfire.history_service.dto.HistoryResponseDTO;
import com.beaconfire.history_service.entity.History;
import com.beaconfire.history_service.repository.HistoryRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.BeanUtils;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import java.time.LocalDateTime;
import java.util.List;
import java.util.stream.Collectors;

@Service
@Slf4j
@Transactional
@RequiredArgsConstructor
public class HistoryService {
    private final HistoryRepository historyRepository;
    private final ValidationService validationService;

    public List<HistoryResponseDTO> getUserHistory(Integer userId) {
        log.info("Fetching history for user {}", userId);
        return historyRepository.findByUserIdOrderByViewDateDesc(userId)
                .stream()
                .map(this::convertToDTO)
                .collect(Collectors.toList());
    }

    public HistoryResponseDTO createHistory(HistoryCreateDTO dto) {
        log.info("Creating/Updating history for user {} and post {}",
                dto.getUserId(), dto.getPostId());

        validationService.validateUserAndPost(dto.getUserId(), dto.getPostId());

        var existingHistory = historyRepository.findByUserIdAndPostId(
                dto.getUserId(), dto.getPostId());

        History history = existingHistory.orElseGet(() -> {
            var newHistory = new History();
            newHistory.setUserId(dto.getUserId());
            newHistory.setPostId(dto.getPostId());
            return newHistory;
        });

        history.setViewDate(LocalDateTime.now());
        return convertToDTO(historyRepository.save(history));
    }

    private HistoryResponseDTO convertToDTO(History history) {
        var dto = new HistoryResponseDTO();
        BeanUtils.copyProperties(history, dto);
        return dto;
    }
}-e 
=== ./src/main/java/com/beaconfire/history_service/exception/ValidationException.java ===

package com.beaconfire.history_service.exception;

public class ValidationException extends RuntimeException {
    public ValidationException(String message) {
        super(message);
    }
}
-e 
=== ./src/main/java/com/beaconfire/history_service/exception/GlobalExceptionHandler.java ===

package com.beaconfire.history_service.exception;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

@ControllerAdvice
public class GlobalExceptionHandler {

    @ExceptionHandler(ValidationException.class)
    public ResponseEntity<String> handleValidationException(ValidationException ex) {
        return ResponseEntity.badRequest().body(ex.getMessage());
    }

}
