-e 
=== ./target/classes/application.properties ===

# Application Configuration
spring.application.name=history-service
server.port=8083

# Database Configuration
spring.datasource.url=jdbc:mysql://database-1.cjwa24k2srfd.us-east-2.rds.amazonaws.com:3306/history_db?useSSL=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=groupproject
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Database Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Cache Configuration
spring.cache.type=simple

# Eureka Configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.client.enabled=true

# Logging Configuration
logging.level.com.beaconfire=DEBUG
logging.level.org.springframework=INFO
logging.level.org.hibernate=INFO

# RabbitMQ Connection Settings
spring.rabbitmq.host=b-420b96b0-7ce2-4393-9684-0ede382d6959.mq.us-east-2.amazonaws.com
spring.rabbitmq.port=5671
spring.rabbitmq.username=groupproject
spring.rabbitmq.password=groupproject

# RabbitMQ SSL Configuration
spring.rabbitmq.ssl.enabled=true
spring.rabbitmq.ssl.algorithm=TLSv1.2
spring.rabbitmq.ssl.verify-hostname=true


-e 
=== ./target/maven-archiver/pom.properties ===

artifactId=history-service
groupId=com.beaconfire
version=0.0.1-SNAPSHOT
-e 
=== ./target/surefire-reports/TEST-com.beaconfire.history_service.HistoryServiceApplicationTests.xml ===

<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.beaconfire.history_service.HistoryServiceApplicationTests" time="14.434" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/zhangruiqi/Desktop/Group-Project/online-forum-app-backend/history-service/target/test-classes:/Users/zhangruiqi/Desktop/Group-Project/online-forum-app-backend/history-service/target/classes:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.0/spring-boot-starter-web-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.0/spring-boot-starter-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.0/spring-boot-starter-logging-3.4.0.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.1/log4j-to-slf4j-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.1/log4j-api-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.0/spring-boot-starter-json-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.1/jackson-databind-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.1/jackson-datatype-jdk8-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.1/jackson-datatype-jsr310-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.1/jackson-module-parameter-names-2.18.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-web/6.2.0/spring-web-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-beans/6.2.0/spring-beans-6.2.0.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-observation/1.14.1/micrometer-observation-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-commons/1.14.1/micrometer-commons-1.14.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-webmvc/6.2.0/spring-webmvc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aop/6.2.0/spring-aop-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context/6.2.0/spring-context-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-expression/6.2.0/spring-expression-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.0/spring-boot-starter-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.0/spring-boot-starter-jdbc-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jdbc/6.2.0/spring-jdbc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/orm/hibernate-core/6.6.2.Final/hibernate-core-6.6.2.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/zhangruiqi/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy/1.15.10/byte-buddy-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/zhangruiqi/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-jpa/3.4.0/spring-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-commons/3.4.0/spring-data-commons-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-orm/6.2.0/spring-orm-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-tx/6.2.0/spring-tx-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aspects/6.2.0/spring-aspects-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.0/spring-boot-starter-validation-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.33/tomcat-embed-el-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-client/4.2.0/spring-cloud-starter-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter/4.2.0/spring-cloud-starter-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-context/4.2.0/spring-cloud-context-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/security/spring-security-crypto/6.4.1/spring-security-crypto-6.4.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-commons/4.2.0/spring-cloud-commons-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/bouncycastle/bcprov-jdk18on/1.78.1/bcprov-jdk18on-1.78.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/4.2.0/spring-cloud-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.4.1/httpclient5-5.4.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.3.1/httpcore5-5.3.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5-h2/5.3.1/httpcore5-h2-5.3.1.jar:/Users/zhangruiqi/.m2/repository/com/netflix/eureka/eureka-client/2.0.4/eureka-client-2.0.4.jar:/Users/zhangruiqi/.m2/repository/com/thoughtworks/xstream/xstream/1.4.20/xstream-1.4.20.jar:/Users/zhangruiqi/.m2/repository/io/github/x-stream/mxparser/1.2.2/mxparser-1.2.2.jar:/Users/zhangruiqi/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/Users/zhangruiqi/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/spectator/spectator-api/1.7.3/spectator-api-1.7.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/zhangruiqi/.m2/repository/commons-codec/commons-codec/1.17.1/commons-codec-1.17.1.jar:/Users/zhangruiqi/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/zhangruiqi/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.1/jackson-annotations-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.1/jackson-core-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar:/Users/zhangruiqi/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar:/Users/zhangruiqi/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/zhangruiqi/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/zhangruiqi/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/guava/33.3.1-jre/guava-33.3.1-jre.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/failureaccess/1.0.2/failureaccess-1.0.2.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/zhangruiqi/.m2/repository/org/checkerframework/checker-qual/3.43.0/checker-qual-3.43.0.jar:/Users/zhangruiqi/.m2/repository/com/google/errorprone/error_prone_annotations/2.28.0/error_prone_annotations-2.28.0.jar:/Users/zhangruiqi/.m2/repository/com/google/j2objc/j2objc-annotations/3.0.0/j2objc-annotations-3.0.0.jar:/Users/zhangruiqi/.m2/repository/com/google/code/gson/gson/2.11.0/gson-2.11.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/servo/servo-core/0.5.3/servo-core-0.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/zhangruiqi/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/Users/zhangruiqi/.m2/repository/org/codehaus/jettison/jettison/1.5.4/jettison-1.5.4.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-loadbalancer/4.2.0/spring-cloud-starter-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-loadbalancer/4.2.0/spring-cloud-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/reactor-core/3.7.0/reactor-core-3.7.0.jar:/Users/zhangruiqi/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/addons/reactor-extra/3.5.2/reactor-extra-3.5.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.4.0/spring-boot-starter-cache-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context-support/6.2.0/spring-context-support-6.2.0.jar:/Users/zhangruiqi/.m2/repository/com/stoyanr/evictor/1.0.0/evictor-1.0.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-devtools/3.4.0/spring-boot-devtools-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot/3.4.0/spring-boot-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.0/spring-boot-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.0/spring-boot-starter-tomcat-3.4.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.33/tomcat-embed-core-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.33/tomcat-embed-websocket-10.1.33.jar:/Users/zhangruiqi/.m2/repository/com/mysql/mysql-connector-j/9.1.0/mysql-connector-j-9.1.0.jar:/Users/zhangruiqi/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.0/spring-boot-starter-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test/3.4.0/spring-boot-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.0/spring-boot-test-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/zhangruiqi/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/zhangruiqi/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/zhangruiqi/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/zhangruiqi/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.3/junit-jupiter-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.3/junit-jupiter-api-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-commons/1.11.3/junit-platform-commons-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.3/junit-jupiter-params-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.3/junit-jupiter-engine-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-engine/1.11.3/junit-platform-engine-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.10/byte-buddy-agent-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/zhangruiqi/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/zhangruiqi/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-core/6.2.0/spring-core-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jcl/6.2.0/spring-jcl-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-test/6.2.0/spring-test-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-amqp/3.4.0/spring-boot-starter-amqp-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-messaging/6.2.0/spring-messaging-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-rabbit/3.2.0/spring-rabbit-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-amqp/3.2.0/spring-amqp-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/retry/spring-retry/2.0.10/spring-retry-2.0.10.jar:/Users/zhangruiqi/.m2/repository/com/rabbitmq/amqp-client/5.22.0/amqp-client-5.22.0.jar:"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="user.timezone" value="America/Los_Angeles"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="APPLICATION_NAME" value="history-service"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/Users/zhangruiqi/Library/Java/JavaVirtualMachines/corretto-17.0.13/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/zhangruiqi/Desktop/Group-Project/online-forum-app-backend/history-service/target/surefire/surefirebooter-20241217230925411_23.jar /Users/zhangruiqi/Desktop/Group-Project/online-forum-app-backend/history-service/target/surefire 2024-12-17T23-09-23_264-jvmRun7 surefire-20241217230925411_21tmp surefire_6-20241217230925411_22tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/zhangruiqi/Desktop/Group-Project/online-forum-app-backend/history-service/target/test-classes:/Users/zhangruiqi/Desktop/Group-Project/online-forum-app-backend/history-service/target/classes:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.0/spring-boot-starter-web-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.0/spring-boot-starter-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.0/spring-boot-starter-logging-3.4.0.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/zhangruiqi/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.1/log4j-to-slf4j-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.1/log4j-api-2.24.1.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.0/spring-boot-starter-json-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.1/jackson-databind-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.1/jackson-datatype-jdk8-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.1/jackson-datatype-jsr310-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.1/jackson-module-parameter-names-2.18.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-web/6.2.0/spring-web-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-beans/6.2.0/spring-beans-6.2.0.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-observation/1.14.1/micrometer-observation-1.14.1.jar:/Users/zhangruiqi/.m2/repository/io/micrometer/micrometer-commons/1.14.1/micrometer-commons-1.14.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-webmvc/6.2.0/spring-webmvc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aop/6.2.0/spring-aop-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context/6.2.0/spring-context-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-expression/6.2.0/spring-expression-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.0/spring-boot-starter-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.0/spring-boot-starter-jdbc-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jdbc/6.2.0/spring-jdbc-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/orm/hibernate-core/6.6.2.Final/hibernate-core-6.6.2.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/zhangruiqi/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy/1.15.10/byte-buddy-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/zhangruiqi/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/zhangruiqi/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/zhangruiqi/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-jpa/3.4.0/spring-data-jpa-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/data/spring-data-commons/3.4.0/spring-data-commons-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-orm/6.2.0/spring-orm-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-tx/6.2.0/spring-tx-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-aspects/6.2.0/spring-aspects-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.0/spring-boot-starter-validation-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.33/tomcat-embed-el-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/zhangruiqi/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-client/4.2.0/spring-cloud-starter-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter/4.2.0/spring-cloud-starter-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-context/4.2.0/spring-cloud-context-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/security/spring-security-crypto/6.4.1/spring-security-crypto-6.4.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-commons/4.2.0/spring-cloud-commons-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/bouncycastle/bcprov-jdk18on/1.78.1/bcprov-jdk18on-1.78.1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/4.2.0/spring-cloud-netflix-eureka-client-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.4.1/httpclient5-5.4.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.3.1/httpcore5-5.3.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/core5/httpcore5-h2/5.3.1/httpcore5-h2-5.3.1.jar:/Users/zhangruiqi/.m2/repository/com/netflix/eureka/eureka-client/2.0.4/eureka-client-2.0.4.jar:/Users/zhangruiqi/.m2/repository/com/thoughtworks/xstream/xstream/1.4.20/xstream-1.4.20.jar:/Users/zhangruiqi/.m2/repository/io/github/x-stream/mxparser/1.2.2/mxparser-1.2.2.jar:/Users/zhangruiqi/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/Users/zhangruiqi/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/spectator/spectator-api/1.7.3/spectator-api-1.7.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/zhangruiqi/.m2/repository/commons-codec/commons-codec/1.17.1/commons-codec-1.17.1.jar:/Users/zhangruiqi/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/zhangruiqi/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.1/jackson-annotations-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.1/jackson-core-2.18.1.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar:/Users/zhangruiqi/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar:/Users/zhangruiqi/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar:/Users/zhangruiqi/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/zhangruiqi/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/zhangruiqi/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/guava/33.3.1-jre/guava-33.3.1-jre.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/failureaccess/1.0.2/failureaccess-1.0.2.jar:/Users/zhangruiqi/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/zhangruiqi/.m2/repository/org/checkerframework/checker-qual/3.43.0/checker-qual-3.43.0.jar:/Users/zhangruiqi/.m2/repository/com/google/errorprone/error_prone_annotations/2.28.0/error_prone_annotations-2.28.0.jar:/Users/zhangruiqi/.m2/repository/com/google/j2objc/j2objc-annotations/3.0.0/j2objc-annotations-3.0.0.jar:/Users/zhangruiqi/.m2/repository/com/google/code/gson/gson/2.11.0/gson-2.11.0.jar:/Users/zhangruiqi/.m2/repository/com/netflix/servo/servo-core/0.5.3/servo-core-0.5.3.jar:/Users/zhangruiqi/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/zhangruiqi/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/Users/zhangruiqi/.m2/repository/org/codehaus/jettison/jettison/1.5.4/jettison-1.5.4.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-starter-loadbalancer/4.2.0/spring-cloud-starter-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/cloud/spring-cloud-loadbalancer/4.2.0/spring-cloud-loadbalancer-4.2.0.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/reactor-core/3.7.0/reactor-core-3.7.0.jar:/Users/zhangruiqi/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/zhangruiqi/.m2/repository/io/projectreactor/addons/reactor-extra/3.5.2/reactor-extra-3.5.2.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.4.0/spring-boot-starter-cache-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-context-support/6.2.0/spring-context-support-6.2.0.jar:/Users/zhangruiqi/.m2/repository/com/stoyanr/evictor/1.0.0/evictor-1.0.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-devtools/3.4.0/spring-boot-devtools-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot/3.4.0/spring-boot-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.0/spring-boot-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.0/spring-boot-starter-tomcat-3.4.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.33/tomcat-embed-core-10.1.33.jar:/Users/zhangruiqi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.33/tomcat-embed-websocket-10.1.33.jar:/Users/zhangruiqi/.m2/repository/com/mysql/mysql-connector-j/9.1.0/mysql-connector-j-9.1.0.jar:/Users/zhangruiqi/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.0/spring-boot-starter-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test/3.4.0/spring-boot-test-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.0/spring-boot-test-autoconfigure-3.4.0.jar:/Users/zhangruiqi/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/zhangruiqi/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/zhangruiqi/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/zhangruiqi/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/zhangruiqi/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/zhangruiqi/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/zhangruiqi/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/zhangruiqi/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.3/junit-jupiter-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.3/junit-jupiter-api-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-commons/1.11.3/junit-platform-commons-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.3/junit-jupiter-params-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.3/junit-jupiter-engine-5.11.3.jar:/Users/zhangruiqi/.m2/repository/org/junit/platform/junit-platform-engine/1.11.3/junit-platform-engine-1.11.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/zhangruiqi/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.10/byte-buddy-agent-1.15.10.jar:/Users/zhangruiqi/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/zhangruiqi/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/zhangruiqi/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/zhangruiqi/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-core/6.2.0/spring-core-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-jcl/6.2.0/spring-jcl-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-test/6.2.0/spring-test-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/boot/spring-boot-starter-amqp/3.4.0/spring-boot-starter-amqp-3.4.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/spring-messaging/6.2.0/spring-messaging-6.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-rabbit/3.2.0/spring-rabbit-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/amqp/spring-amqp/3.2.0/spring-amqp-3.2.0.jar:/Users/zhangruiqi/.m2/repository/org/springframework/retry/spring-retry/2.0.10/spring-retry-2.0.10.jar:/Users/zhangruiqi/.m2/repository/com/rabbitmq/amqp-client/5.22.0/amqp-client-5.22.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/zhangruiqi"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-10-15"/>
    <property name="java.home" value="/Users/zhangruiqi/Library/Java/JavaVirtualMachines/corretto-17.0.13/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/zhangruiqi/Desktop/Group-Project/online-forum-app-backend/history-service"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/Users/zhangruiqi/Desktop/Group-Project/online-forum-app-backend/history-service/target/surefire/surefirebooter-20241217230925411_23.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="17.0.13+11-LTS"/>
    <property name="user.name" value="zhangruiqi"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="14.5"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-17.0.13.11.1"/>
    <property name="localRepository" value="/Users/zhangruiqi/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-17/issues/"/>
    <property name="java.io.tmpdir" value="/var/folders/21/8jwtn5ps4wb5rvh_md4yqk_80000gn/T/"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.13"/>
    <property name="user.dir" value="/Users/zhangruiqi/Desktop/Group-Project/online-forum-app-backend/history-service"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="17236"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/zhangruiqi/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="17.0.13+11-LTS"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="61.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[history-service] "/>
  </properties>
  <testcase name="contextLoads" classname="com.beaconfire.history_service.HistoryServiceApplicationTests" time="0.456">
    <system-out><![CDATA[23:09:26.959 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.beaconfire.history_service.HistoryServiceApplicationTests]: HistoryServiceApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
23:09:27.257 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.beaconfire.history_service.HistoryServiceApplication for test class com.beaconfire.history_service.HistoryServiceApplicationTests
23:09:28.294 [main] INFO org.springframework.boot.devtools.restart.RestartApplicationListener -- Restart disabled due to context in which it is running

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.0)

2024-12-17T23:09:29.040-08:00  INFO 17236 --- [history-service] [           main] c.b.h.HistoryServiceApplicationTests     : Starting HistoryServiceApplicationTests using Java 17.0.13 with PID 17236 (started by zhangruiqi in /Users/zhangruiqi/Desktop/Group-Project/online-forum-app-backend/history-service)
2024-12-17T23:09:29.040-08:00 DEBUG 17236 --- [history-service] [           main] c.b.h.HistoryServiceApplicationTests     : Running with Spring Boot v3.4.0, Spring v6.2.0
2024-12-17T23:09:29.041-08:00  INFO 17236 --- [history-service] [           main] c.b.h.HistoryServiceApplicationTests     : No active profile set, falling back to 1 default profile: "default"
2024-12-17T23:09:31.724-08:00  INFO 17236 --- [history-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-17T23:09:32.085-08:00  INFO 17236 --- [history-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 316 ms. Found 1 JPA repository interface.
2024-12-17T23:09:32.891-08:00  INFO 17236 --- [history-service] [           main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=ce6ab68b-68b1-3945-ad83-7c4a7b8368ce
2024-12-17T23:09:34.243-08:00  INFO 17236 --- [history-service] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-17T23:09:34.340-08:00  INFO 17236 --- [history-service] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.2.Final
2024-12-17T23:09:34.485-08:00  INFO 17236 --- [history-service] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-12-17T23:09:34.949-08:00  INFO 17236 --- [history-service] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-12-17T23:09:35.024-08:00  INFO 17236 --- [history-service] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-12-17T23:09:36.538-08:00  INFO 17236 --- [history-service] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@72c704f1
2024-12-17T23:09:36.558-08:00  INFO 17236 --- [history-service] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-12-17T23:09:36.834-08:00  WARN 17236 --- [history-service] [           main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-12-17T23:09:36.880-08:00  INFO 17236 --- [history-service] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.39
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2024-12-17T23:09:38.612-08:00  INFO 17236 --- [history-service] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-12-17T23:09:38.905-08:00  INFO 17236 --- [history-service] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-17T23:09:39.162-08:00  INFO 17236 --- [history-service] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-12-17T23:09:39.828-08:00  WARN 17236 --- [history-service] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-17T23:09:40.434-08:00  INFO 17236 --- [history-service] [           main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-12-17T23:09:40.481-08:00  WARN 17236 --- [history-service] [           main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-12-17T23:09:40.511-08:00  INFO 17236 --- [history-service] [           main] c.b.h.HistoryServiceApplicationTests     : Started HistoryServiceApplicationTests in 12.257 seconds (process running for 15.066)
]]></system-out>
  </testcase>
</testsuite>-e 
=== ./pom.xml ===

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.beaconfire</groupId>
	<artifactId>history-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>history-service</name>
	<description>history-service</description>

	<properties>
		<java.version>17</java.version>
		<spring-cloud.version>2024.0.0</spring-cloud.version>
	</properties>

	<dependencies>
		<!-- Spring Boot Starters -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- Spring Cloud -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<!-- Development Tools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- OpenFeign -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-loadbalancer</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Database -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>history-service</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>-e 
=== ./.mvn/wrapper/maven-wrapper.properties ===

# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
wrapperVersion=3.3.2
distributionType=only-script
distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.9/apache-maven-3.9.9-bin.zip
-e 
=== ./.idea/encodings.xml ===

<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="Encoding">
    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
  </component>
</project>-e 
=== ./.idea/jarRepositories.xml ===

<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="RemoteRepositoriesConfiguration">
    <remote-repository>
      <option name="id" value="central" />
      <option name="name" value="Central Repository" />
      <option name="url" value="https://repo.maven.apache.org/maven2" />
    </remote-repository>
    <remote-repository>
      <option name="id" value="central" />
      <option name="name" value="Maven Central repository" />
      <option name="url" value="https://repo1.maven.org/maven2" />
    </remote-repository>
    <remote-repository>
      <option name="id" value="jboss.community" />
      <option name="name" value="JBoss Community repository" />
      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
    </remote-repository>
  </component>
</project>-e 
=== ./.idea/vcs.xml ===

<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="VcsDirectoryMappings">
    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
  </component>
</project>-e 
=== ./.idea/workspace.xml ===

<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a049a02b-7a79-4a20-bcf4-f62cb9073b28" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/Postman_HistoryTest.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/beaconfire/history_service/config/CacheConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/beaconfire/history_service/config/SecurityConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/beaconfire/history_service/controller/HistoryController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/beaconfire/history_service/dto/HistoryCreateDTO.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/beaconfire/history_service/dto/HistoryResponseDTO.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/beaconfire/history_service/entity/History.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/beaconfire/history_service/exception/GlobalExceptionHandler.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/beaconfire/history_service/exception/HistoryNotFoundException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/beaconfire/history_service/exception/InvalidObjectIdException.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/beaconfire/history_service/repository/HistoryRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/beaconfire/history_service/service/HistoryService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/beaconfire/history_service/HistoryServiceApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/beaconfire/history_service/HistoryServiceApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/application.properties" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="mavenHomeTypeForPersistence" value="WRAPPER" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2qJ59rYLQG8pjOrTtFyElxthhLT" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "Spring Boot.HistoryServiceApplication.executor": "Run",
    "git-widget-placeholder": "ricky-history",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/Users/zhangruiqi/Desktop/Group-Project/online-forum-app-backend/history-service",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="ReactorSettings">
    <option name="notificationShown" value="true" />
  </component>
  <component name="RunManager">
    <configuration name="HistoryServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <option name="FRAME_DEACTIVATION_UPDATE_POLICY" value="UpdateClassesAndResources" />
      <module name="history-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.beaconfire.history_service.HistoryServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23339.11" />
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23339.11" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a049a02b-7a79-4a20-bcf4-f62cb9073b28" name="Changes" comment="" />
      <created>1734367689062</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1734367689062</updated>
      <workItem from="1734367690375" duration="13887000" />
      <workItem from="1734457497067" duration="5000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>-e 
=== ./.idea/misc.xml ===

<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ExternalStorageConfigurationManager" enabled="true" />
  <component name="MavenProjectsManager">
    <option name="originalFiles">
      <list>
        <option value="$PROJECT_DIR$/pom.xml" />
      </list>
    </option>
  </component>
  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="corretto-17" project-jdk-type="JavaSDK" />
</project>-e 
=== ./.idea/compiler.xml ===

<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CompilerConfiguration">
    <annotationProcessing>
      <profile default="true" name="Default" enabled="true" />
      <profile name="Maven default annotation processors profile" enabled="true">
        <sourceOutputDir name="target/generated-sources/annotations" />
        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
        <outputRelativeToContentRoot value="true" />
        <module name="history-service" />
      </profile>
    </annotationProcessing>
  </component>
  <component name="JavacSettings">
    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
      <module name="history-service" options="-parameters" />
    </option>
  </component>
</project>-e 
=== ./src/test/java/com/beaconfire/history_service/HistoryServiceApplicationTests.java ===

package com.beaconfire.history_service;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class HistoryServiceApplicationTests {

	@Test
	void contextLoads() {
	}

}
-e 
=== ./src/main/resources/application.properties ===

# Application Configuration
spring.application.name=history-service
server.port=8083

# Database Configuration
spring.datasource.url=jdbc:mysql://database-1.cjwa24k2srfd.us-east-2.rds.amazonaws.com:3306/history_db?useSSL=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=groupproject
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Database Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Cache Configuration
spring.cache.type=simple

# Eureka Configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.client.enabled=true

# Logging Configuration
logging.level.com.beaconfire=DEBUG
logging.level.org.springframework=INFO
logging.level.org.hibernate=INFO

# RabbitMQ Connection Settings
spring.rabbitmq.host=b-420b96b0-7ce2-4393-9684-0ede382d6959.mq.us-east-2.amazonaws.com
spring.rabbitmq.port=5671
spring.rabbitmq.username=groupproject
spring.rabbitmq.password=groupproject

# RabbitMQ SSL Configuration
spring.rabbitmq.ssl.enabled=true
spring.rabbitmq.ssl.algorithm=TLSv1.2
spring.rabbitmq.ssl.verify-hostname=true


-e 
=== ./src/main/java/com/beaconfire/history_service/dto/HistoryCreateDTO.java ===

package com.beaconfire.history_service.dto;

import jakarta.validation.constraints.NotNull;
import lombok.Data;
import lombok.Builder;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class HistoryCreateDTO {
    @NotNull(message = "User ID cannot be null")
    private Integer userId;

    @NotNull(message = "Post ID cannot be null")
    private String postId;
}
-e 
=== ./src/main/java/com/beaconfire/history_service/dto/post/PostDTO.java ===

package com.beaconfire.history_service.dto.post;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.time.LocalDateTime;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class PostDTO {
    private String postId;
    private String title;
    private String content;
    private Integer userId;
    private String accessibility;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
}
-e 
=== ./src/main/java/com/beaconfire/history_service/dto/DataResponse.java ===

package com.beaconfire.history_service.dto;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class DataResponse {
    private boolean success;
    private String message;
    private Object data;
}-e 
=== ./src/main/java/com/beaconfire/history_service/dto/user/UserDTO.java ===

package com.beaconfire.history_service.dto.user;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.time.LocalDateTime;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class UserDTO {
    private Integer id;
    private String firstName;
    private String lastName;
    private String email;
    private UserType type;
    private Boolean active;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private String profileImageUrl;
}-e 
=== ./src/main/java/com/beaconfire/history_service/dto/user/UserType.java ===

package com.beaconfire.history_service.dto.user;

public enum UserType {
    VISITOR,
    NORMAL,
    ADMIN,
    SUPERADMIN
}-e 
=== ./src/main/java/com/beaconfire/history_service/dto/HistoryResponseDTO.java ===

package com.beaconfire.history_service.dto;

import lombok.Data;
import java.time.LocalDateTime;
import lombok.Builder;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class HistoryResponseDTO {
    private Integer historyId;
    private Integer userId;
    private String postId;
    private LocalDateTime viewDate;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
}-e 
=== ./src/main/java/com/beaconfire/history_service/repository/HistoryRepository.java ===

package com.beaconfire.history_service.repository;

import com.beaconfire.history_service.entity.History;
import jakarta.validation.constraints.NotNull;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import java.util.List;
import java.util.Optional;

@Repository
public interface HistoryRepository extends JpaRepository<History, Integer> {
    List<History> findByUserIdOrderByViewDateDesc(Integer userId);

    @Query("SELECT h FROM History h WHERE h.userId = :userId AND h.postId = :postId")
    Optional<History> findByUserIdAndPostId(
            @Param("userId") Integer userId,
            @Param("postId") String postId);
}-e 
=== ./src/main/java/com/beaconfire/history_service/feign/PostFeignClient.java ===

package com.beaconfire.history_service.feign;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.beaconfire.history_service.dto.DataResponse;

@FeignClient(name = "posts-service", path = "/posts")
public interface PostFeignClient {
    @GetMapping("/{postId}")
    DataResponse getPostById(@PathVariable("postId") String postId);
}-e 
=== ./src/main/java/com/beaconfire/history_service/feign/UserFeignClient.java ===

package com.beaconfire.history_service.feign;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.beaconfire.history_service.dto.DataResponse;

@FeignClient(name = "users-service", path = "/users")
public interface UserFeignClient {
    @GetMapping("/{id}")
    DataResponse getUserById(@PathVariable("id") Integer userId);
}
-e 
=== ./src/main/java/com/beaconfire/history_service/ServletInitializer.java ===

package com.beaconfire.history_service;

import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;

public class ServletInitializer extends SpringBootServletInitializer {

	@Override
	protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
		return application.sources(HistoryServiceApplication.class);
	}

}
-e 
=== ./src/main/java/com/beaconfire/history_service/entity/History.java ===

package com.beaconfire.history_service.entity;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.time.LocalDateTime;

@Entity
@Table(name = "history")
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class History {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer historyId;

    @Column(nullable = false)
    private Integer userId;

    @Column(nullable = false)
    private String postId;

    @Column(nullable = false)
    private LocalDateTime viewDate;

    @Column(nullable = false, updatable = false)
    private LocalDateTime createdAt;

    @Column(nullable = false)
    private LocalDateTime updatedAt;

    @PrePersist
    protected void onCreate() {
        createdAt = LocalDateTime.now();
        updatedAt = LocalDateTime.now();
    }

    @PreUpdate
    protected void onUpdate() {
        updatedAt = LocalDateTime.now();
    }
}
-e 
=== ./src/main/java/com/beaconfire/history_service/controller/HistoryController.java ===

package com.beaconfire.history_service.controller;

import com.beaconfire.history_service.dto.HistoryCreateDTO;
import com.beaconfire.history_service.dto.HistoryResponseDTO;
import com.beaconfire.history_service.service.HistoryService;
import jakarta.validation.Valid;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import java.util.List;

@RestController
@RequestMapping("/api/history")
@Slf4j
public class HistoryController {
    private final HistoryService historyService;

    public HistoryController(HistoryService historyService) {
        this.historyService = historyService;
    }

    @GetMapping("/user/{userId}")
    public ResponseEntity<List<HistoryResponseDTO>> getUserHistory(
            @PathVariable Integer userId) {
        log.info("Received request to get history for user {}", userId);
        return ResponseEntity.ok(historyService.getUserHistory(userId));
    }

    @PostMapping
    public ResponseEntity<HistoryResponseDTO> createHistory(
            @Valid @RequestBody HistoryCreateDTO dto) {
        log.info("Received request to create history for user {} and post {}",
                dto.getUserId(), dto.getPostId());
        return ResponseEntity.ok(historyService.createHistory(dto));
    }
}-e 
=== ./src/main/java/com/beaconfire/history_service/HistoryServiceApplication.java ===

package com.beaconfire.history_service;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
import org.springframework.cache.annotation.EnableCaching;
import org.springframework.cloud.openfeign.EnableFeignClients;

@SpringBootApplication
@EnableDiscoveryClient
@EnableFeignClients(basePackages = "com.beaconfire.history_service.feign")
@EnableCaching
public class HistoryServiceApplication {
	public static void main(String[] args) {
		System.out.print("HISTORY SERVICE RUNNING XXXXX");
		SpringApplication.run(HistoryServiceApplication.class, args);
	}
}-e 
=== ./src/main/java/com/beaconfire/history_service/service/ValidationService.java ===

package com.beaconfire.history_service.service;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.stereotype.Service;

import com.beaconfire.history_service.dto.DataResponse;
import com.beaconfire.history_service.feign.PostFeignClient;
import com.beaconfire.history_service.feign.UserFeignClient;
import com.beaconfire.history_service.exception.ValidationException;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class ValidationService {
    private final UserFeignClient userFeignClient;
    private final PostFeignClient postFeignClient;
    private final ObjectMapper objectMapper;

    public void validateUserAndPost(Integer userId, String postId) {
        try {
            DataResponse userResponse = userFeignClient.getUserById(userId);
            if (!userResponse.isSuccess()) {
                throw new ValidationException("User not found with ID: " + userId);
            }

        } catch (Exception e) {
            throw new ValidationException("Failed to validate user: " + e.getMessage());
        }
        /*
        try {
            DataResponse postResponse = postFeignClient.getPostById(postId);
            if (!postResponse.isSuccess()) {
                throw new ValidationException("Post not found with ID: " + postId);
            }

        } catch (Exception e) {
            throw new ValidationException("Failed to validate post: " + e.getMessage());
        }
         */
    }
}-e 
=== ./src/main/java/com/beaconfire/history_service/service/HistoryService.java ===

package com.beaconfire.history_service.service;

import com.beaconfire.history_service.dto.HistoryCreateDTO;
import com.beaconfire.history_service.dto.HistoryResponseDTO;
import com.beaconfire.history_service.entity.History;
import com.beaconfire.history_service.repository.HistoryRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.BeanUtils;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import java.time.LocalDateTime;
import java.util.List;
import java.util.stream.Collectors;

@Service
@Slf4j
@Transactional
@RequiredArgsConstructor
public class HistoryService {
    private final HistoryRepository historyRepository;
    private final ValidationService validationService;

    public List<HistoryResponseDTO> getUserHistory(Integer userId) {
        log.info("Fetching history for user {}", userId);
        return historyRepository.findByUserIdOrderByViewDateDesc(userId)
                .stream()
                .map(this::convertToDTO)
                .collect(Collectors.toList());
    }

    public HistoryResponseDTO createHistory(HistoryCreateDTO dto) {
        log.info("Creating/Updating history for user {} and post {}",
                dto.getUserId(), dto.getPostId());

        validationService.validateUserAndPost(dto.getUserId(), dto.getPostId());

        var existingHistory = historyRepository.findByUserIdAndPostId(
                dto.getUserId(), dto.getPostId());

        History history = existingHistory.orElseGet(() -> {
            var newHistory = new History();
            newHistory.setUserId(dto.getUserId());
            newHistory.setPostId(dto.getPostId());
            return newHistory;
        });

        history.setViewDate(LocalDateTime.now());
        return convertToDTO(historyRepository.save(history));
    }

    private HistoryResponseDTO convertToDTO(History history) {
        var dto = new HistoryResponseDTO();
        BeanUtils.copyProperties(history, dto);
        return dto;
    }
}-e 
=== ./src/main/java/com/beaconfire/history_service/exception/ValidationException.java ===

package com.beaconfire.history_service.exception;

public class ValidationException extends RuntimeException {
    public ValidationException(String message) {
        super(message);
    }
}
-e 
=== ./src/main/java/com/beaconfire/history_service/exception/GlobalExceptionHandler.java ===

package com.beaconfire.history_service.exception;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

@ControllerAdvice
public class GlobalExceptionHandler {

    @ExceptionHandler(ValidationException.class)
    public ResponseEntity<String> handleValidationException(ValidationException ex) {
        return ResponseEntity.badRequest().body(ex.getMessage());
    }

}
